#!/bin/bash

#########################################
# Script de d√©ploiement Humari Tools Plugin
#
# COMMANDES POUR EXECUTER :
# cd /var/www/megahub/humari_tools_wp/
# chmod +x deploy.sh
# ./deploy.sh
#
# OU en une ligne depuis n'importe o√π :
# /var/www/megahub/humari_tools_wp/deploy.sh
#
# PR√âREQUIS :
# - Avoir les droits d'√©criture sur le dossier WordPress
# - Plugin peut rester activ√© (drag & drop logic)
#########################################

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Chemins
SOURCE_DIR="/var/www/megahub/humari_tools_wp"
DEST_DIR="/var/www/frenchease/sites/prod/Humari/wp-content/plugins/humari-tools"

echo -e "${BLUE}üöÄ D√©ploiement du plugin Humari Tools${NC}"
echo "=================================="

# V√©rification du dossier source
if [ ! -d "$SOURCE_DIR" ]; then
    echo -e "${RED}‚ùå Erreur: Dossier source introuvable: $SOURCE_DIR${NC}"
    exit 1
fi

# V√©rification du dossier WordPress de destination
WORDPRESS_PLUGINS_DIR="/var/www/frenchease/sites/prod/Humari/wp-content/plugins"
if [ ! -d "$WORDPRESS_PLUGINS_DIR" ]; then
    echo -e "${RED}‚ùå Erreur: Dossier WordPress plugins introuvable: $WORDPRESS_PLUGINS_DIR${NC}"
    exit 1
fi

# Affichage des chemins
echo -e "${YELLOW}üìÇ Source:${NC} $SOURCE_DIR"
echo -e "${YELLOW}üìÇ Destination:${NC} $DEST_DIR"
echo ""

# Demander confirmation
read -p "Continuer le d√©ploiement ? (y/N): " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}‚èπÔ∏è  D√©ploiement annul√©${NC}"
    exit 0
fi

# Backup du plugin existant (si il existe)
if [ -d "$DEST_DIR" ]; then
    BACKUP_DIR="${DEST_DIR}_backup_$(date +%Y%m%d_%H%M%S)"
    echo -e "${YELLOW}üì¶ Backup du plugin existant vers: $BACKUP_DIR${NC}"
    cp -r "$DEST_DIR" "$BACKUP_DIR"
    
    # Suppression compl√®te de l'ancien (logique drag & drop)
    echo -e "${YELLOW}üóëÔ∏è  Suppression de l'ancien plugin...${NC}"
    rm -rf "$DEST_DIR"
fi

# Cr√©ation du nouveau dossier
echo -e "${BLUE}üìÅ Cr√©ation du nouveau dossier plugin...${NC}"
mkdir -p "$DEST_DIR"

# Copie s√©lective des fichiers (EXCLUSION du deploy.sh)
echo -e "${BLUE}üìã Copie des fichiers...${NC}"

# Liste des fichiers/dossiers √† exclure
EXCLUDE_FILES=("deploy.sh" ".git" ".gitignore" "node_modules")

# Function pour v√©rifier si un fichier doit √™tre exclu
should_exclude() {
    local file="$1"
    for exclude in "${EXCLUDE_FILES[@]}"; do
        if [[ "$file" == "$exclude" ]]; then
            return 0  # True - √† exclure
        fi
    done
    return 1  # False - √† inclure
}

# Parcourir et copier tous les fichiers/dossiers sauf ceux exclus
for item in "$SOURCE_DIR"/*; do
    if [ -e "$item" ]; then
        basename_item=$(basename "$item")
        
        if should_exclude "$basename_item"; then
            echo -e "${YELLOW}‚è≠Ô∏è  Exclusion: $basename_item${NC}"
            continue
        fi
        
        if [ -d "$item" ]; then
            cp -r "$item" "$DEST_DIR/" && echo -e "${GREEN}‚úÖ Dossier $basename_item copi√©${NC}"
        else
            cp "$item" "$DEST_DIR/" && echo -e "${GREEN}‚úÖ Fichier $basename_item copi√©${NC}"
        fi
    fi
done

# Ajustement des permissions (comme WordPress)
echo -e "${BLUE}üîê Ajustement des permissions...${NC}"
chown -R www-data:www-data "$DEST_DIR"
chmod -R 755 "$DEST_DIR"
find "$DEST_DIR" -type f -exec chmod 644 {} \;

# V√©rification finale
echo ""
echo -e "${BLUE}üîç V√©rification du d√©ploiement:${NC}"

# V√©rification des fichiers essentiels
if [ -f "$DEST_DIR/humari-tools.php" ]; then
    echo -e "${GREEN}‚úÖ Plugin principal trouv√©${NC}"
else
    echo -e "${RED}‚ùå Plugin principal manquant${NC}"
    exit 1
fi

if [ -d "$DEST_DIR/includes" ]; then
    echo -e "${GREEN}‚úÖ Dossier includes/ trouv√©${NC}"
    echo "   $(ls -1 "$DEST_DIR/includes" | wc -l) fichier(s) dans includes/"
else
    echo -e "${RED}‚ùå Dossier includes/ manquant${NC}"
fi

if [ -d "$DEST_DIR/assets" ]; then
    echo -e "${GREEN}‚úÖ Dossier assets/ trouv√©${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Dossier assets/ manquant (optionnel)${NC}"
fi

# V√©rification que deploy.sh n'a PAS √©t√© copi√©
if [ -f "$DEST_DIR/deploy.sh" ]; then
    echo -e "${RED}‚ùå ERREUR: deploy.sh a √©t√© copi√© par erreur${NC}"
    rm -f "$DEST_DIR/deploy.sh"
    echo -e "${GREEN}‚úÖ deploy.sh supprim√©${NC}"
else
    echo -e "${GREEN}‚úÖ deploy.sh correctement exclu${NC}"
fi

# Affichage de la taille et du contenu
PLUGIN_SIZE=$(du -sh "$DEST_DIR" | cut -f1)
FILE_COUNT=$(find "$DEST_DIR" -type f | wc -l)
echo -e "${BLUE}üìä Taille du plugin:${NC} $PLUGIN_SIZE ($FILE_COUNT fichiers)"

# Liste des fichiers copi√©s
echo -e "${BLUE}üìÑ Contenu final:${NC}"
ls -la "$DEST_DIR"

echo ""
echo -e "${GREEN}üéâ D√©ploiement termin√© avec succ√®s !${NC}"
echo -e "${GREEN}üîÑ Logique drag & drop appliqu√©e (suppression/recr√©ation)${NC}"
echo ""
echo -e "${YELLOW}üìù Prochaines √©tapes:${NC}"
echo "1. Le plugin reste activ√© s'il l'√©tait"
echo "2. Tester avec un shortcode: [humari_tool tool=\"converter\" category=\"document\"]"
echo "3. V√©rifier dans l'admin WordPress si besoin"
echo ""
echo -e "${BLUE}üîó Chemin du plugin:${NC} $DEST_DIR"