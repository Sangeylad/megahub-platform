# Generated by Django 4.2.23 on 2025-07-22 09:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('crm_entities_core', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TextAnalysis',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source_object_id', models.UUIDField(help_text="ID de l'entité source")),
                ('analysis_type', models.CharField(choices=[('keyword_extraction', 'Extraction Mots-clés'), ('topic_modeling', 'Modélisation Sujets'), ('named_entity', 'Reconnaissance Entités'), ('intent_detection', "Détection d'intention"), ('language_detection', 'Détection Langue'), ('readability', 'Lisibilité'), ('complexity', 'Complexité'), ('style_analysis', 'Analyse de Style')], help_text="Type d'analyse", max_length=20)),
                ('analyzed_text', models.TextField(help_text='Texte analysé')),
                ('results', models.JSONField(default=dict, help_text="Résultats de l'analyse")),
                ('confidence_scores', models.JSONField(blank=True, default=dict, help_text='Scores de confiance')),
                ('analyzer_config', models.JSONField(default=dict, help_text="Configuration de l'analyseur")),
                ('processing_stats', models.JSONField(blank=True, default=dict, help_text='Statistiques de traitement')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('source_content_type', models.ForeignKey(help_text="Type d'entité source", on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Analyse Textuelle',
                'verbose_name_plural': 'Analyses Textuelles',
                'db_table': 'crm_text_analysis',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['analysis_type'], name='crm_text_an_analysi_0002ac_idx'), models.Index(fields=['source_content_type', 'source_object_id'], name='crm_text_an_source__496af6_idx')],
            },
        ),
        migrations.CreateModel(
            name='Sentiment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source_type', models.CharField(choices=[('email', 'Email'), ('call_transcript', "Transcript d'appel"), ('chat', 'Chat'), ('note', 'Note'), ('review', 'Avis client'), ('survey', 'Enquête'), ('social_media', 'Réseaux sociaux'), ('support_ticket', 'Ticket support'), ('feedback', 'Feedback'), ('other', 'Autre')], help_text='Type de source', max_length=20)),
                ('source_object_id', models.UUIDField(help_text="ID de l'entité source")),
                ('analyzed_text', models.TextField(help_text='Texte analysé')),
                ('text_language', models.CharField(default='fr', help_text='Langue du texte', max_length=10)),
                ('sentiment_score', models.DecimalField(decimal_places=3, help_text='Score de sentiment (-1 à 1)', max_digits=4, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('sentiment_polarity', models.CharField(choices=[('very_negative', 'Très Négatif'), ('negative', 'Négatif'), ('neutral', 'Neutre'), ('positive', 'Positif'), ('very_positive', 'Très Positif')], help_text='Polarité du sentiment', max_length=15)),
                ('confidence_score', models.DecimalField(decimal_places=3, help_text='Score de confiance', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('emotions', models.JSONField(blank=True, default=dict, help_text='Émotions détectées avec scores')),
                ('dominant_emotion', models.CharField(blank=True, help_text='Émotion dominante', max_length=20)),
                ('keywords', models.JSONField(blank=True, default=list, help_text='Mots-clés extraits')),
                ('topics', models.JSONField(blank=True, default=list, help_text='Sujets identifiés')),
                ('entities', models.JSONField(blank=True, default=list, help_text='Entités nommées')),
                ('analyzer_model', models.CharField(help_text="Modèle d'analyse utilisé", max_length=50)),
                ('model_version', models.CharField(help_text='Version du modèle', max_length=20)),
                ('processing_time_ms', models.IntegerField(blank=True, help_text='Temps de traitement (ms)', null=True)),
                ('human_validated', models.BooleanField(default=False, help_text='Validé par humain')),
                ('human_sentiment_score', models.DecimalField(blank=True, decimal_places=3, help_text='Score validé par humain', max_digits=4, null=True)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('customer', models.ForeignKey(blank=True, help_text='Client concerné', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sentiment_analyses', to='crm_entities_core.contact')),
                ('opportunity', models.ForeignKey(blank=True, help_text='Opportunité liée', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sentiment_analyses', to='crm_entities_core.opportunity')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('source_content_type', models.ForeignKey(help_text="Type d'entité source", on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('validated_by', models.ForeignKey(blank=True, help_text='Validé par', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sentiment_validations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sentiment Analytics',
                'verbose_name_plural': 'Sentiments Analytics',
                'db_table': 'crm_analytics_sentiment',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['source_type', 'sentiment_polarity'], name='crm_analyti_source__f7dc7d_idx'), models.Index(fields=['source_content_type', 'source_object_id'], name='crm_analyti_source__6d70d2_idx'), models.Index(fields=['sentiment_score'], name='crm_analyti_sentime_06daa3_idx'), models.Index(fields=['customer', 'created_at'], name='crm_analyti_custome_16ab13_idx'), models.Index(fields=['opportunity', 'created_at'], name='crm_analyti_opportu_57a85a_idx')],
            },
        ),
        migrations.CreateModel(
            name='CustomerSentimentProfile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('overall_sentiment_score', models.DecimalField(decimal_places=3, help_text='Score de sentiment global', max_digits=4, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('recent_sentiment_score', models.DecimalField(blank=True, decimal_places=3, help_text='Score sentiment récent (30 derniers jours)', max_digits=4, null=True)),
                ('sentiment_trend', models.CharField(blank=True, choices=[('improving', 'En amélioration'), ('stable', 'Stable'), ('declining', 'En déclin'), ('volatile', 'Volatile')], help_text='Tendance du sentiment', max_length=20)),
                ('trend_strength', models.DecimalField(blank=True, decimal_places=3, help_text='Force de la tendance', max_digits=4, null=True)),
                ('total_interactions', models.IntegerField(default=0, help_text="Nombre total d'interactions analysées")),
                ('positive_interactions', models.IntegerField(default=0, help_text='Interactions positives')),
                ('negative_interactions', models.IntegerField(default=0, help_text='Interactions négatives')),
                ('neutral_interactions', models.IntegerField(default=0, help_text='Interactions neutres')),
                ('dominant_emotions', models.JSONField(blank=True, default=list, help_text='Émotions dominantes du client')),
                ('emotion_distribution', models.JSONField(blank=True, default=dict, help_text='Distribution des émotions')),
                ('frequent_topics', models.JSONField(blank=True, default=list, help_text='Sujets fréquemment mentionnés')),
                ('sentiment_by_topic', models.JSONField(blank=True, default=dict, help_text='Sentiment par sujet')),
                ('requires_attention', models.BooleanField(default=False, help_text='Nécessite attention')),
                ('risk_level', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé')], default='low', help_text='Niveau de risque', max_length=10)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('customer', models.OneToOneField(help_text='Client', on_delete=django.db.models.deletion.CASCADE, related_name='sentiment_profile', to='crm_entities_core.contact')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil Sentiment Client',
                'verbose_name_plural': 'Profils Sentiment Clients',
                'db_table': 'crm_customer_sentiment_profile',
                'ordering': ['-overall_sentiment_score'],
                'indexes': [models.Index(fields=['overall_sentiment_score'], name='crm_custome_overall_f2af32_idx'), models.Index(fields=['sentiment_trend'], name='crm_custome_sentime_9b29fd_idx'), models.Index(fields=['requires_attention', 'risk_level'], name='crm_custome_require_12316f_idx')],
            },
        ),
    ]
