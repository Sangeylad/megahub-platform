# Generated by Django 4.2.23 on 2025-07-22 09:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Report',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom du rapport', max_length=100)),
                ('report_type', models.CharField(choices=[('summary', 'Résumé'), ('detailed', 'Détaillé'), ('comparative', 'Comparatif'), ('trend', 'Tendance'), ('performance', 'Performance'), ('forecast', 'Prévisionnel'), ('custom', 'Personnalisé')], help_text='Type de rapport', max_length=15)),
                ('category', models.CharField(blank=True, help_text='Catégorie', max_length=50)),
                ('description', models.TextField(blank=True, help_text='Description du rapport')),
                ('data_sources', models.JSONField(default=list, help_text='Sources de données')),
                ('filters', models.JSONField(blank=True, default=dict, help_text='Filtres par défaut')),
                ('sections', models.JSONField(default=list, help_text='Sections du rapport')),
                ('template', models.TextField(blank=True, help_text='Template du rapport')),
                ('output_format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON'), ('html', 'HTML')], default='pdf', help_text='Format de sortie', max_length=10)),
                ('is_scheduled', models.BooleanField(default=False, help_text='Rapport programmé')),
                ('schedule_config', models.JSONField(blank=True, default=dict, help_text='Configuration programmation')),
                ('is_active', models.BooleanField(default=True, help_text='Rapport actif')),
                ('is_template', models.BooleanField(default=False, help_text='Template réutilisable')),
                ('generation_count', models.IntegerField(default=0, help_text='Nombre de générations')),
                ('last_generated_at', models.DateTimeField(blank=True, help_text='Dernière génération', null=True)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rapport Analytics',
                'verbose_name_plural': 'Rapports Analytics',
                'db_table': 'crm_analytics_report',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_method', models.CharField(choices=[('email', 'Email'), ('download', 'Téléchargement'), ('webhook', 'Webhook')], default='email', help_text='Méthode de livraison', max_length=15)),
                ('custom_filters', models.JSONField(blank=True, default=dict, help_text='Filtres personnalisés')),
                ('is_active', models.BooleanField(default=True, help_text='Abonnement actif')),
                ('subscribed_at', models.DateTimeField(auto_now_add=True, help_text='Abonné le')),
                ('report', models.ForeignKey(help_text='Rapport', on_delete=django.db.models.deletion.CASCADE, to='crm_analytics_reports.report')),
                ('user', models.ForeignKey(help_text='Destinataire', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Destinataire Rapport',
                'verbose_name_plural': 'Destinataires Rapports',
                'db_table': 'crm_report_recipient',
                'unique_together': {('report', 'user')},
            },
        ),
        migrations.AddField(
            model_name='report',
            name='recipients',
            field=models.ManyToManyField(blank=True, help_text='Destinataires', related_name='subscribed_reports', through='crm_analytics_reports.ReportRecipient', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ReportGeneration',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('generating', 'En cours'), ('completed', 'Terminé'), ('failed', 'Échoué')], default='pending', help_text='Statut de génération', max_length=15)),
                ('requested_at', models.DateTimeField(auto_now_add=True, help_text='Demandé à')),
                ('started_at', models.DateTimeField(blank=True, help_text='Démarré à', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Terminé à', null=True)),
                ('generation_params', models.JSONField(default=dict, help_text='Paramètres de génération')),
                ('filters_applied', models.JSONField(default=dict, help_text='Filtres appliqués')),
                ('file_path', models.CharField(blank=True, help_text='Chemin du fichier généré', max_length=500)),
                ('file_size', models.IntegerField(blank=True, help_text='Taille du fichier (bytes)', null=True)),
                ('error_message', models.TextField(blank=True, help_text="Message d'erreur")),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('generated_by', models.ForeignKey(blank=True, help_text='Généré par', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(help_text='Rapport généré', on_delete=django.db.models.deletion.CASCADE, related_name='generations', to='crm_analytics_reports.report')),
            ],
            options={
                'verbose_name': 'Génération Rapport',
                'verbose_name_plural': 'Générations Rapports',
                'db_table': 'crm_report_generation',
                'ordering': ['-requested_at'],
                'indexes': [models.Index(fields=['report', 'status'], name='crm_report__report__fc471e_idx'), models.Index(fields=['requested_at'], name='crm_report__request_b7dbe8_idx')],
            },
        ),
        migrations.CreateModel(
            name='ReportFilter',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom du filtre', max_length=100)),
                ('filter_type', models.CharField(choices=[('date_range', 'Plage de Dates'), ('single_value', 'Valeur Unique'), ('multiple_values', 'Valeurs Multiples'), ('range', 'Plage'), ('boolean', 'Booléen'), ('text_search', 'Recherche Texte')], help_text='Type de filtre', max_length=20)),
                ('field_name', models.CharField(help_text='Nom du champ', max_length=100)),
                ('operator', models.CharField(help_text='Opérateur', max_length=20)),
                ('options', models.JSONField(blank=True, default=list, help_text='Options disponibles')),
                ('default_value', models.JSONField(blank=True, help_text='Valeur par défaut', null=True)),
                ('label', models.CharField(help_text="Label d'affichage", max_length=100)),
                ('placeholder', models.CharField(blank=True, help_text='Placeholder', max_length=100)),
                ('help_text', models.CharField(blank=True, help_text="Texte d'aide", max_length=200)),
                ('is_required', models.BooleanField(default=False, help_text='Filtre obligatoire')),
                ('is_active', models.BooleanField(default=True, help_text='Filtre actif')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Filtre Rapport',
                'verbose_name_plural': 'Filtres Rapports',
                'db_table': 'crm_report_filter',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['filter_type'], name='crm_report__filter__f3a33d_idx'), models.Index(fields=['field_name'], name='crm_report__field_n_3faa73_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['report_type', 'category'], name='crm_analyti_report__2a9814_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['is_scheduled', 'is_active'], name='crm_analyti_is_sche_4a2fd1_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['last_generated_at'], name='crm_analyti_last_ge_44698e_idx'),
        ),
    ]
