# Generated by Django 4.2.23 on 2025-07-22 09:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Titre de la recommandation', max_length=200)),
                ('recommendation_type', models.CharField(choices=[('action', 'Action'), ('content', 'Contenu'), ('timing', 'Timing'), ('channel', 'Canal'), ('pricing', 'Pricing'), ('product', 'Produit'), ('personalization', 'Personnalisation'), ('optimization', 'Optimisation')], help_text='Type de recommandation', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyenne'), ('high', 'Élevée'), ('urgent', 'Urgente')], default='medium', help_text='Niveau de priorité', max_length=10)),
                ('target_object_id', models.UUIDField(help_text="ID de l'entité cible")),
                ('description', models.TextField(help_text='Description de la recommandation')),
                ('rationale', models.TextField(help_text='Justification de la recommandation')),
                ('expected_impact', models.TextField(blank=True, help_text='Impact attendu')),
                ('action_items', models.JSONField(default=list, help_text='Actions à effectuer')),
                ('success_metrics', models.JSONField(blank=True, default=list, help_text='Métriques de succès')),
                ('confidence_score', models.DecimalField(decimal_places=4, help_text='Score de confiance', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('expected_value', models.DecimalField(blank=True, decimal_places=2, help_text='Valeur attendue (€)', max_digits=15, null=True)),
                ('effort_estimate', models.CharField(blank=True, choices=[('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé')], help_text="Estimation de l'effort", max_length=20)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('accepted', 'Accepté'), ('rejected', 'Rejeté'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('expired', 'Expiré')], default='pending', help_text='Statut de la recommandation', max_length=20)),
                ('expires_at', models.DateTimeField(blank=True, help_text="Date d'expiration", null=True)),
                ('accepted_at', models.DateTimeField(blank=True, help_text="Date d'acceptation", null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Date de completion', null=True)),
                ('feedback_rating', models.IntegerField(blank=True, help_text='Évaluation (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback_comments', models.TextField(blank=True, help_text='Commentaires')),
                ('assigned_to', models.ForeignKey(blank=True, help_text='Assigné à', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_recommendations', to=settings.AUTH_USER_MODEL)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('target_content_type', models.ForeignKey(help_text="Type d'entité cible", on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Recommandation Analytics',
                'verbose_name_plural': 'Recommandations Analytics',
                'db_table': 'crm_analytics_recommendation',
                'ordering': ['-priority', '-confidence_score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom de la prédiction', max_length=100)),
                ('prediction_type', models.CharField(choices=[('churn_risk', 'Risque de Churn'), ('lifetime_value', 'Lifetime Value'), ('conversion_probability', 'Probabilité de Conversion'), ('next_best_action', 'Meilleure Action Suivante'), ('optimal_pricing', 'Prix Optimal'), ('lead_scoring', 'Score de Lead'), ('upsell_opportunity', 'Opportunité Upsell'), ('renewal_likelihood', 'Probabilité Renouvellement'), ('engagement_score', "Score d'Engagement"), ('custom', 'Personnalisé')], help_text='Type de prédiction', max_length=25)),
                ('model_type', models.CharField(choices=[('logistic_regression', 'Régression Logistique'), ('random_forest', 'Random Forest'), ('gradient_boosting', 'Gradient Boosting'), ('neural_network', 'Réseau de Neurones'), ('svm', 'SVM'), ('naive_bayes', 'Naive Bayes'), ('ensemble', 'Ensemble'), ('deep_learning', 'Deep Learning')], help_text='Type de modèle ML', max_length=20)),
                ('target_object_id', models.UUIDField(help_text="ID de l'entité cible")),
                ('predicted_value', models.DecimalField(decimal_places=6, help_text='Valeur prédite', max_digits=15)),
                ('confidence_score', models.DecimalField(decimal_places=4, help_text='Score de confiance (0-1)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('probability_distribution', models.JSONField(blank=True, default=dict, help_text='Distribution de probabilité')),
                ('feature_importance', models.JSONField(default=dict, help_text='Importance des features')),
                ('contributing_factors', models.JSONField(default=list, help_text='Facteurs contributifs')),
                ('model_version', models.CharField(help_text='Version du modèle', max_length=20)),
                ('model_accuracy', models.DecimalField(blank=True, decimal_places=4, help_text='Précision du modèle', max_digits=5, null=True)),
                ('training_date', models.DateTimeField(blank=True, help_text="Date d'entraînement du modèle", null=True)),
                ('recommended_actions', models.JSONField(blank=True, default=list, help_text='Actions recommandées')),
                ('next_review_date', models.DateField(blank=True, help_text='Prochaine révision', null=True)),
                ('actual_outcome', models.DecimalField(blank=True, decimal_places=6, help_text='Résultat réel (pour validation)', max_digits=15, null=True)),
                ('prediction_accuracy', models.DecimalField(blank=True, decimal_places=4, help_text='Précision de cette prédiction', max_digits=5, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Prédiction active')),
                ('expires_at', models.DateTimeField(blank=True, help_text="Date d'expiration", null=True)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('target_content_type', models.ForeignKey(help_text="Type d'entité cible", on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Prédiction Analytics',
                'verbose_name_plural': 'Prédictions Analytics',
                'db_table': 'crm_analytics_prediction',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Insight',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text="Titre de l'insight", max_length=200)),
                ('insight_type', models.CharField(choices=[('pattern', 'Motif Détecté'), ('anomaly', 'Anomalie'), ('opportunity', 'Opportunité'), ('risk', 'Risque'), ('correlation', 'Corrélation'), ('trend', 'Tendance'), ('seasonal', 'Saisonnier'), ('performance', 'Performance')], help_text="Type d'insight", max_length=15)),
                ('category', models.CharField(blank=True, help_text='Catégorie', max_length=50)),
                ('summary', models.TextField(help_text="Résumé de l'insight")),
                ('detailed_analysis', models.TextField(blank=True, help_text='Analyse détaillée')),
                ('supporting_data', models.JSONField(default=dict, help_text="Données supportant l'insight")),
                ('statistical_significance', models.DecimalField(blank=True, decimal_places=4, help_text='Significativité statistique', max_digits=5, null=True)),
                ('impact_level', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé'), ('critical', 'Critique')], default='medium', help_text="Niveau d'impact", max_length=20)),
                ('affected_entities', models.JSONField(default=list, help_text='Entités affectées')),
                ('is_validated', models.BooleanField(default=False, help_text='Insight validé')),
                ('validated_at', models.DateTimeField(blank=True, help_text='Date de validation', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Insight actif')),
                ('is_actionable', models.BooleanField(default=True, help_text='Insight actionnable')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('recommendations', models.ManyToManyField(blank=True, help_text='Recommandations liées', related_name='insights', to='crm_analytics_predictions.recommendation')),
                ('validated_by', models.ForeignKey(blank=True, help_text='Validé par', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_insights', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Insight Analytics',
                'verbose_name_plural': 'Insights Analytics',
                'db_table': 'crm_analytics_insight',
                'ordering': ['-impact_level', '-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='recommendation',
            index=models.Index(fields=['recommendation_type', 'priority'], name='crm_analyti_recomme_308fb5_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendation',
            index=models.Index(fields=['target_content_type', 'target_object_id'], name='crm_analyti_target__e0ea4a_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendation',
            index=models.Index(fields=['status', 'expires_at'], name='crm_analyti_status_4699eb_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendation',
            index=models.Index(fields=['assigned_to', 'status'], name='crm_analyti_assigne_8165d6_idx'),
        ),
        migrations.AddIndex(
            model_name='prediction',
            index=models.Index(fields=['prediction_type', 'model_type'], name='crm_analyti_predict_3edec9_idx'),
        ),
        migrations.AddIndex(
            model_name='prediction',
            index=models.Index(fields=['target_content_type', 'target_object_id'], name='crm_analyti_target__52831a_idx'),
        ),
        migrations.AddIndex(
            model_name='prediction',
            index=models.Index(fields=['confidence_score'], name='crm_analyti_confide_385b42_idx'),
        ),
        migrations.AddIndex(
            model_name='prediction',
            index=models.Index(fields=['expires_at', 'is_active'], name='crm_analyti_expires_99f4bb_idx'),
        ),
        migrations.AddIndex(
            model_name='insight',
            index=models.Index(fields=['insight_type', 'category'], name='crm_analyti_insight_344662_idx'),
        ),
        migrations.AddIndex(
            model_name='insight',
            index=models.Index(fields=['impact_level', 'is_active'], name='crm_analyti_impact__b36c69_idx'),
        ),
        migrations.AddIndex(
            model_name='insight',
            index=models.Index(fields=['is_validated', 'validated_at'], name='crm_analyti_is_vali_18ab8b_idx'),
        ),
    ]
