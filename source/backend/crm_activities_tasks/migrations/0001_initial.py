# Generated by Django 4.2.23 on 2025-07-22 11:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('crm_activities_core', '0001_initial'),
        ('brands_core', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('task_category', models.CharField(choices=[('follow_up', 'Suivi'), ('research', 'Recherche'), ('preparation', 'Préparation'), ('data_entry', 'Saisie'), ('review', 'Revue'), ('approval', 'Approbation'), ('contact', 'Contact'), ('admin', 'Administratif'), ('other', 'Autre')], help_text='Catégorie de tâche', max_length=20)),
                ('instructions', models.TextField(blank=True, help_text='Instructions spécifiques')),
                ('progress_percentage', models.IntegerField(default=0, help_text="% d'avancement", validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('estimated_duration', models.IntegerField(blank=True, help_text='Durée estimée (minutes)', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('actual_duration', models.IntegerField(blank=True, help_text='Durée réelle (minutes)', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('delegation_notes', models.TextField(blank=True, help_text='Notes de délégation')),
                ('is_recurring', models.BooleanField(default=False, help_text='Tâche récurrente')),
                ('recurrence_pattern', models.JSONField(blank=True, default=dict, help_text='Modèle récurrence')),
                ('completion_notes', models.TextField(blank=True, help_text='Notes de completion')),
                ('deliverables', models.JSONField(blank=True, default=list, help_text='Livrables')),
                ('activity', models.OneToOneField(help_text='Activité de base', on_delete=django.db.models.deletion.CASCADE, related_name='task_details', to='crm_activities_core.activity')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('delegated_to', models.ForeignKey(blank=True, help_text='Délégué à', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delegated_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Détails Tâche',
                'verbose_name_plural': 'Détails Tâches',
                'db_table': 'crm_task_activity',
            },
        ),
        migrations.CreateModel(
            name='TaskDependency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dependency_type', models.CharField(choices=[('finish_to_start', 'Fin à Début'), ('start_to_start', 'Début à Début'), ('finish_to_finish', 'Fin à Fin'), ('start_to_finish', 'Début à Fin')], default='finish_to_start', help_text='Type dépendance', max_length=20)),
                ('lag_days', models.IntegerField(default=0, help_text='Délai (jours)')),
                ('notes', models.TextField(blank=True, help_text='Notes')),
                ('predecessor', models.ForeignKey(help_text='Tâche prédécesseur', on_delete=django.db.models.deletion.CASCADE, related_name='successor_dependencies', to='crm_activities_tasks.taskactivity')),
                ('successor', models.ForeignKey(help_text='Tâche successeur', on_delete=django.db.models.deletion.CASCADE, related_name='predecessor_dependencies', to='crm_activities_tasks.taskactivity')),
            ],
            options={
                'verbose_name': 'Dépendance Tâche',
                'verbose_name_plural': 'Dépendances Tâches',
                'db_table': 'crm_task_dependency',
                'unique_together': {('predecessor', 'successor')},
            },
        ),
        migrations.AddField(
            model_name='taskactivity',
            name='depends_on',
            field=models.ManyToManyField(blank=True, help_text='Dépend de ces tâches', related_name='blocks', through='crm_activities_tasks.TaskDependency', to='crm_activities_tasks.taskactivity'),
        ),
        migrations.AddField(
            model_name='taskactivity',
            name='owner',
            field=models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='taskactivity',
            name='parent_recurring_task',
            field=models.ForeignKey(blank=True, help_text='Tâche récurrente parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recurring_instances', to='crm_activities_tasks.taskactivity'),
        ),
        migrations.CreateModel(
            name='ReminderActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('reminder_date', models.DateTimeField(help_text='Date du rappel')),
                ('advance_notice_minutes', models.IntegerField(default=15, help_text='Préavis (minutes)')),
                ('frequency', models.CharField(choices=[('once', 'Une fois'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='once', help_text='Fréquence', max_length=15)),
                ('end_date', models.DateTimeField(blank=True, help_text='Date fin récurrence', null=True)),
                ('max_occurrences', models.IntegerField(blank=True, help_text='Max occurrences', null=True)),
                ('notification_methods', models.JSONField(default=list, help_text='Méthodes de notification')),
                ('is_sent', models.BooleanField(default=False, help_text='Envoyé')),
                ('sent_date', models.DateTimeField(blank=True, help_text='Date envoi', null=True)),
                ('is_acknowledged', models.BooleanField(default=False, help_text='Accusé réception')),
                ('acknowledged_date', models.DateTimeField(blank=True, help_text='Date accusé', null=True)),
                ('activity', models.OneToOneField(help_text='Activité de base', on_delete=django.db.models.deletion.CASCADE, related_name='reminder_details', to='crm_activities_core.activity')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('related_task', models.ForeignKey(blank=True, help_text='Tâche associée', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='crm_activities_tasks.taskactivity')),
            ],
            options={
                'verbose_name': 'Détails Rappel',
                'verbose_name_plural': 'Détails Rappels',
                'db_table': 'crm_reminder_activity',
            },
        ),
        migrations.AddIndex(
            model_name='taskactivity',
            index=models.Index(fields=['task_category'], name='crm_task_ac_task_ca_0d2557_idx'),
        ),
        migrations.AddIndex(
            model_name='taskactivity',
            index=models.Index(fields=['delegated_to'], name='crm_task_ac_delegat_62c8f3_idx'),
        ),
        migrations.AddIndex(
            model_name='taskactivity',
            index=models.Index(fields=['is_recurring'], name='crm_task_ac_is_recu_da1324_idx'),
        ),
        migrations.AddIndex(
            model_name='reminderactivity',
            index=models.Index(fields=['reminder_date', 'is_sent'], name='crm_reminde_reminde_1da7a3_idx'),
        ),
        migrations.AddIndex(
            model_name='reminderactivity',
            index=models.Index(fields=['frequency'], name='crm_reminde_frequen_46f14d_idx'),
        ),
        migrations.AddIndex(
            model_name='reminderactivity',
            index=models.Index(fields=['related_task'], name='crm_reminde_related_140aa2_idx'),
        ),
    ]
