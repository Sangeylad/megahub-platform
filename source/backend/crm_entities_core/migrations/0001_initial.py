# Generated by Django 4.2.23 on 2025-07-22 08:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="Nom de l'entreprise", max_length=255)),
                ('account_number', models.CharField(help_text='Numéro de compte auto-généré', max_length=50, unique=True)),
                ('account_type', models.CharField(choices=[('customer', 'Client'), ('prospect', 'Prospect'), ('partner', 'Partenaire'), ('vendor', 'Fournisseur'), ('competitor', 'Concurrent')], default='customer', help_text='Type de compte', max_length=20)),
                ('industry', models.CharField(blank=True, help_text="Secteur d'activité (libre)", max_length=100)),
                ('website', models.URLField(blank=True, help_text='Site web')),
                ('employee_count', models.IntegerField(blank=True, help_text="Nombre d'employés", null=True)),
                ('annual_revenue', models.DecimalField(blank=True, decimal_places=2, help_text="Chiffre d'affaires annuel (€)", max_digits=15, null=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('fax', models.CharField(blank=True, max_length=20)),
                ('billing_street', models.CharField(blank=True, max_length=255)),
                ('billing_city', models.CharField(blank=True, max_length=100)),
                ('billing_state', models.CharField(blank=True, max_length=100)),
                ('billing_postal_code', models.CharField(blank=True, max_length=20)),
                ('billing_country', models.CharField(default='France', max_length=100)),
                ('shipping_street', models.CharField(blank=True, max_length=255)),
                ('shipping_city', models.CharField(blank=True, max_length=100)),
                ('shipping_state', models.CharField(blank=True, max_length=100)),
                ('shipping_postal_code', models.CharField(blank=True, max_length=20)),
                ('shipping_country', models.CharField(default='France', max_length=100)),
                ('account_hierarchy_level', models.IntegerField(default=1, help_text='Niveau dans la hiérarchie')),
                ('account_tier', models.CharField(choices=[('standard', 'Standard'), ('premium', 'Premium'), ('enterprise', 'Enterprise'), ('strategic', 'Stratégique')], default='standard', help_text='Niveau de compte', max_length=20)),
                ('customer_priority', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyenne'), ('high', 'Élevée'), ('critical', 'Critique')], default='medium', help_text='Priorité client', max_length=20)),
                ('payment_terms', models.CharField(default='net_30', help_text='Conditions de paiement', max_length=50)),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Limite de crédit (€)', max_digits=15, null=True)),
                ('health_score', models.IntegerField(blank=True, help_text='Score santé client (0-100)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('engagement_score', models.IntegerField(blank=True, help_text='Score engagement (0-100)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ltv_predicted', models.DecimalField(blank=True, decimal_places=2, help_text='Lifetime Value prédite (€)', max_digits=15, null=True)),
                ('churn_risk_score', models.DecimalField(blank=True, decimal_places=2, help_text='Score risque churn (0-1)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('first_purchase_date', models.DateField(blank=True, help_text='Date premier achat', null=True)),
                ('last_activity_date', models.DateTimeField(blank=True, help_text='Dernière activité', null=True)),
                ('next_renewal_date', models.DateField(blank=True, help_text='Prochaine date de renouvellement', null=True)),
            ],
            options={
                'verbose_name': 'Compte CRM',
                'verbose_name_plural': 'Comptes CRM',
                'db_table': 'crm_account',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('consent_marketing', models.BooleanField(default=False, help_text='Consentement marketing')),
                ('consent_date', models.DateTimeField(blank=True, help_text='Date du consentement', null=True)),
                ('data_source', models.CharField(blank=True, help_text='Source des données (import, formulaire, API)', max_length=100)),
                ('opt_out_date', models.DateTimeField(blank=True, help_text="Date d'opt-out", null=True)),
                ('anonymized_at', models.DateTimeField(blank=True, help_text="Date d'anonymisation des données", null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('salutation', models.CharField(blank=True, choices=[('mr', 'Monsieur'), ('mrs', 'Madame'), ('miss', 'Mademoiselle'), ('dr', 'Docteur'), ('prof', 'Professeur')], help_text='Civilité', max_length=10)),
                ('first_name', models.CharField(help_text='Prénom', max_length=100)),
                ('last_name', models.CharField(help_text='Nom de famille', max_length=100)),
                ('job_title', models.CharField(blank=True, help_text='Poste/Fonction', max_length=100)),
                ('department', models.CharField(blank=True, help_text='Département', max_length=100)),
                ('email', models.EmailField(help_text='Email principal', max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, help_text='Téléphone', max_length=20)),
                ('mobile', models.CharField(blank=True, help_text='Mobile', max_length=20)),
                ('linkedin_url', models.URLField(blank=True, help_text='Profil LinkedIn')),
                ('mailing_street', models.CharField(blank=True, max_length=255)),
                ('mailing_city', models.CharField(blank=True, max_length=100)),
                ('mailing_state', models.CharField(blank=True, max_length=100)),
                ('mailing_postal_code', models.CharField(blank=True, max_length=20)),
                ('mailing_country', models.CharField(blank=True, max_length=100)),
                ('lead_source', models.CharField(blank=True, choices=[('website', 'Site Web'), ('social_media', 'Réseaux Sociaux'), ('referral', 'Recommandation'), ('cold_call', 'Appel à froid'), ('trade_show', 'Salon'), ('webinar', 'Webinaire'), ('content_marketing', 'Content Marketing'), ('paid_ads', 'Publicités Payantes'), ('partner', 'Partenaire'), ('other', 'Autre')], help_text='Source du lead', max_length=20)),
                ('lead_source_detail', models.CharField(blank=True, help_text='Détail source du lead', max_length=200)),
                ('is_primary_contact', models.BooleanField(default=False, help_text='Contact principal du compte')),
                ('is_decision_maker', models.BooleanField(default=False, help_text='Décideur')),
                ('is_influencer', models.BooleanField(default=False, help_text='Influenceur dans les décisions')),
                ('lead_score', models.IntegerField(blank=True, help_text='Score de qualification (0-100)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('engagement_score', models.IntegerField(blank=True, help_text="Score d'engagement (0-100)", null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('email_opt_out', models.BooleanField(default=False, help_text='Opt-out email')),
                ('phone_opt_out', models.BooleanField(default=False, help_text='Opt-out téléphone')),
                ('preferred_contact_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Téléphone'), ('linkedin', 'LinkedIn'), ('no_contact', 'Aucun contact')], default='email', help_text='Méthode de contact préférée', max_length=20)),
                ('last_activity_date', models.DateTimeField(blank=True, help_text='Dernière activité', null=True)),
                ('last_email_date', models.DateTimeField(blank=True, help_text='Dernier email', null=True)),
                ('last_call_date', models.DateTimeField(blank=True, help_text='Dernier appel', null=True)),
                ('description', models.TextField(blank=True, help_text='Description/Notes sur le contact')),
            ],
            options={
                'verbose_name': 'Contact CRM',
                'verbose_name_plural': 'Contacts CRM',
                'db_table': 'crm_contact',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="Nom de l'opportunité", max_length=200)),
                ('opportunity_number', models.CharField(help_text="Numéro d'opportunité auto-généré", max_length=50, unique=True)),
                ('opportunity_type', models.CharField(choices=[('new_business', 'Nouvelle Affaire'), ('existing_customer', 'Client Existant'), ('renewal', 'Renouvellement'), ('upsell', 'Montée en Gamme'), ('cross_sell', 'Vente Croisée')], default='new_business', help_text="Type d'opportunité", max_length=20)),
                ('lead_source', models.CharField(blank=True, choices=[('website', 'Site Web'), ('social_media', 'Réseaux Sociaux'), ('referral', 'Recommandation'), ('cold_call', 'Prospection'), ('trade_show', 'Salon'), ('webinar', 'Webinaire'), ('partner', 'Partenaire'), ('existing_customer', 'Client Existant')], help_text='Source du lead', max_length=20)),
                ('probability', models.IntegerField(help_text='Probabilité de succès (%)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('amount', models.DecimalField(decimal_places=2, help_text="Montant de l'opportunité (€)", max_digits=15)),
                ('expected_revenue', models.DecimalField(blank=True, decimal_places=2, help_text='Revenus attendus (montant × probabilité)', max_digits=15, null=True)),
                ('close_date', models.DateField(help_text='Date de clôture prévue')),
                ('created_date', models.DateField(auto_now_add=True, help_text='Date de création')),
                ('discovery_completed_date', models.DateField(blank=True, help_text='Date de fin de découverte', null=True)),
                ('proposal_sent_date', models.DateField(blank=True, help_text="Date d'envoi proposition", null=True)),
                ('days_in_stage', models.IntegerField(default=0, help_text="Nombre de jours dans l'étape actuelle")),
                ('sales_cycle_days', models.IntegerField(blank=True, help_text='Durée totale du cycle de vente', null=True)),
                ('description', models.TextField(blank=True, help_text='Description détaillée')),
                ('customer_need', models.TextField(blank=True, help_text='Besoin client identifié')),
                ('proposed_solution', models.TextField(blank=True, help_text='Solution proposée')),
                ('competitors', models.TextField(blank=True, help_text='Concurrents identifiés')),
                ('competitive_advantage', models.TextField(blank=True, help_text='Avantage concurrentiel')),
                ('decision_makers', models.TextField(blank=True, help_text='Décideurs identifiés')),
                ('decision_criteria', models.TextField(blank=True, help_text='Critères de décision')),
                ('decision_process', models.TextField(blank=True, help_text='Processus de décision')),
                ('budget_confirmed', models.BooleanField(default=False, help_text='Budget confirmé')),
                ('budget_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Montant budget disponible (€)', max_digits=15, null=True)),
                ('is_closed', models.BooleanField(default=False, help_text='Opportunité fermée')),
                ('is_won', models.BooleanField(default=False, help_text='Opportunité gagnée')),
                ('closed_date', models.DateField(blank=True, help_text='Date de clôture effective', null=True)),
                ('loss_reason', models.CharField(blank=True, help_text='Raison de la perte', max_length=100)),
                ('loss_description', models.TextField(blank=True, help_text='Description détaillée de la perte')),
                ('next_step', models.CharField(blank=True, help_text='Prochaine étape', max_length=200)),
                ('next_step_date', models.DateField(blank=True, help_text='Date prochaine étape', null=True)),
                ('account', models.ForeignKey(help_text='Compte associé', on_delete=django.db.models.deletion.CASCADE, related_name='opportunities', to='crm_entities_core.account')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Opportunité CRM',
                'verbose_name_plural': 'Opportunités CRM',
                'db_table': 'crm_opportunity',
                'ordering': ['-amount', '-close_date'],
            },
        ),
    ]
