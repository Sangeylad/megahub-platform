# Generated by Django 4.2.23 on 2025-07-22 08:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('company_categorization_core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='WorkflowTemplate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('is_template', models.BooleanField(default=False, help_text='Élément template (réutilisable)')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom du template', max_length=100)),
                ('display_name', models.CharField(help_text="Nom d'affichage", max_length=150)),
                ('category', models.CharField(choices=[('lead_management', 'Gestion de Leads'), ('sales_process', 'Processus de Vente'), ('customer_onboarding', 'Onboarding Client'), ('customer_retention', 'Fidélisation Client'), ('support_automation', 'Automatisation Support'), ('data_management', 'Gestion de Données'), ('reporting', 'Reporting'), ('compliance', 'Conformité')], help_text='Catégorie du template', max_length=20)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags du template')),
                ('description', models.TextField(help_text='Description détaillée')),
                ('use_case', models.TextField(blank=True, help_text="Cas d'usage typique")),
                ('template_config', models.JSONField(default=dict, help_text='Configuration complète du workflow')),
                ('steps_config', models.JSONField(default=list, help_text='Configuration des étapes')),
                ('variables', models.JSONField(blank=True, default=dict, help_text='Variables paramétrables')),
                ('prerequisites', models.JSONField(blank=True, default=list, help_text='Prérequis pour utiliser ce template')),
                ('complexity_level', models.CharField(choices=[('beginner', 'Débutant'), ('intermediate', 'Intermédiaire'), ('advanced', 'Avancé'), ('expert', 'Expert')], default='intermediate', help_text='Niveau de complexité', max_length=20)),
                ('is_public', models.BooleanField(default=False, help_text='Template public (marketplace)')),
                ('is_featured', models.BooleanField(default=False, help_text='Template mis en avant')),
                ('is_verified', models.BooleanField(default=False, help_text="Template vérifié par l'équipe")),
                ('usage_count', models.IntegerField(default=0, help_text="Nombre d'utilisations")),
                ('rating_average', models.DecimalField(blank=True, decimal_places=2, help_text='Note moyenne', max_digits=3, null=True)),
                ('rating_count', models.IntegerField(default=0, help_text="Nombre d'évaluations")),
                ('version', models.CharField(default='1.0.0', help_text='Version du template', max_length=20)),
                ('changelog', models.TextField(blank=True, help_text='Journal des modifications')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('company_category', models.ForeignKey(blank=True, help_text="Secteur d'application du workflow", null=True, on_delete=django.db.models.deletion.SET_NULL, to='company_categorization_core.industrycategory')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Template Workflow',
                'verbose_name_plural': 'Templates Workflow',
                'db_table': 'crm_workflow_template',
                'ordering': ['-is_featured', '-rating_average', '-usage_count'],
            },
        ),
        migrations.CreateModel(
            name='TemplateRating',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('is_template', models.BooleanField(default=False, help_text='Élément template (réutilisable)')),
                ('version', models.CharField(default='1.0', help_text='Version', max_length=20)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(help_text='Note (1-5)')),
                ('review', models.TextField(blank=True, help_text='Commentaire')),
                ('usage_context', models.CharField(blank=True, help_text="Contexte d'utilisation", max_length=100)),
                ('would_recommend', models.BooleanField(default=True, help_text='Recommanderait ce template')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('company_category', models.ForeignKey(blank=True, help_text="Secteur d'application du workflow", null=True, on_delete=django.db.models.deletion.SET_NULL, to='company_categorization_core.industrycategory')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(help_text='Template évalué', on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='crm_workflow_templates.workflowtemplate')),
                ('user', models.ForeignKey(help_text='Utilisateur qui évalue', on_delete=django.db.models.deletion.CASCADE, related_name='template_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Évaluation Template',
                'verbose_name_plural': 'Évaluations Template',
                'db_table': 'crm_template_rating',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IndustryWorkflowPreset',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_template', models.BooleanField(default=False, help_text='Élément template (réutilisable)')),
                ('version', models.CharField(default='1.0', help_text='Version', max_length=20)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom du preset', max_length=100)),
                ('preset_config', models.JSONField(default=dict, help_text='Configuration preset')),
                ('description', models.TextField(help_text='Description du preset')),
                ('benefits', models.JSONField(blank=True, default=list, help_text='Bénéfices du preset')),
                ('setup_time_minutes', models.IntegerField(blank=True, help_text='Temps de setup estimé (minutes)', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Preset actif')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('company_category', models.ForeignKey(blank=True, help_text="Secteur d'application du workflow", null=True, on_delete=django.db.models.deletion.SET_NULL, to='company_categorization_core.industrycategory')),
                ('included_templates', models.ManyToManyField(help_text='Templates inclus dans le preset', related_name='industry_presets', to='crm_workflow_templates.workflowtemplate')),
                ('industry_category', models.ForeignKey(help_text="Catégorie d'industrie", on_delete=django.db.models.deletion.CASCADE, related_name='workflow_presets', to='company_categorization_core.industrycategory')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Preset Workflow Industrie',
                'verbose_name_plural': 'Presets Workflow Industries',
                'db_table': 'crm_industry_workflow_preset',
                'ordering': ['industry_category', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='workflowtemplate',
            index=models.Index(fields=['category', 'is_public'], name='crm_workflo_categor_9a8f77_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowtemplate',
            index=models.Index(fields=['is_featured', 'is_verified'], name='crm_workflo_is_feat_063116_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowtemplate',
            index=models.Index(fields=['rating_average', 'usage_count'], name='crm_workflo_rating__5d7d25_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='templaterating',
            unique_together={('template', 'user')},
        ),
        migrations.AddIndex(
            model_name='industryworkflowpreset',
            index=models.Index(fields=['industry_category', 'is_active'], name='crm_industr_industr_fd2977_idx'),
        ),
    ]
