# Generated by Django 4.2.23 on 2025-07-21 17:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company_core', '0003_company_trial_expires_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FintechCompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('additional_info', models.JSONField(blank=True, default=dict, help_text='Informations additionnelles spécifiques au secteur')),
                ('industry_score', models.IntegerField(blank=True, help_text="Score d'adéquation avec le secteur (0-100)", null=True)),
                ('is_validated', models.BooleanField(default=False, help_text='Profil validé par un expert secteur')),
                ('validated_at', models.DateTimeField(blank=True, help_text='Date de validation', null=True)),
                ('segment', models.CharField(choices=[('payments', 'Paiements & Néobanques'), ('lending', 'Crédit & Prêts'), ('investment', 'Investissement & Gestion'), ('insurance', 'AssurTech'), ('regtech', 'RegTech & Compliance'), ('blockchain', 'Blockchain & Crypto'), ('robo_advisory', 'Conseil Robotisé'), ('crowdfunding', 'Financement Participatif'), ('b2b_fintech', 'Solutions B2B FinTech')], help_text='Segment FinTech spécialisé', max_length=20)),
                ('has_banking_license', models.BooleanField(default=False, help_text="Dispose d'une licence bancaire")),
                ('has_payment_license', models.BooleanField(default=False, help_text="Dispose d'une licence de paiement")),
                ('regulatory_framework', models.CharField(blank=True, help_text='Cadre réglementaire principal (ex: PSD2, GDPR)', max_length=100)),
                ('transaction_volume_monthly', models.DecimalField(blank=True, decimal_places=2, help_text='Volume de transactions mensuel (€)', max_digits=15, null=True)),
                ('active_users_count', models.IntegerField(blank=True, help_text="Nombre d'utilisateurs actifs", null=True)),
                ('banking_partners', models.TextField(blank=True, help_text='Partenaires bancaires principaux')),
                ('payment_providers', models.TextField(blank=True, help_text='Fournisseurs de paiement intégrés')),
                ('kyc_provider', models.CharField(blank=True, help_text='Fournisseur KYC/AML', max_length=100)),
                ('compliance_score', models.IntegerField(blank=True, help_text='Score de conformité (0-100)', null=True)),
                ('company', models.OneToOneField(help_text='Entreprise associée à ce profil', on_delete=django.db.models.deletion.CASCADE, to='company_core.company')),
                ('validated_by', models.ForeignKey(blank=True, help_text='Expert qui a validé le profil', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil FinTech',
                'verbose_name_plural': 'Profils FinTech',
                'db_table': 'fintech_company_profile',
                'indexes': [models.Index(fields=['segment'], name='fintech_com_segment_820324_idx'), models.Index(fields=['has_banking_license'], name='fintech_com_has_ban_eba572_idx'), models.Index(fields=['compliance_score'], name='fintech_com_complia_1d3dfc_idx')],
            },
        ),
    ]
