# Generated by Django 4.2.23 on 2025-07-22 08:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('crm_entities_core', '0001_initial'),
        ('brands_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('company_categorization_core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pipeline',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False, help_text='Pipeline/Stage par défaut')),
                ('sort_order', models.IntegerField(default=0, help_text="Ordre d'affichage")),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom du pipeline', max_length=100)),
                ('pipeline_type', models.CharField(choices=[('sales', 'Ventes'), ('marketing', 'Marketing'), ('support', 'Support'), ('custom', 'Personnalisé'), ('renewal', 'Renouvellement'), ('upsell', 'Montée en Gamme')], default='sales', help_text='Type de pipeline', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description du pipeline')),
                ('color_code', models.CharField(default='#6a5acd', help_text='Code couleur hex', max_length=7)),
                ('icon_name', models.CharField(default='funnel', help_text='Nom icône (Font Awesome)', max_length=50)),
                ('auto_progress', models.BooleanField(default=False, help_text='Progression automatique entre stages')),
                ('requires_approval', models.BooleanField(default=False, help_text='Nécessite approbation pour progression')),
                ('average_cycle_days', models.IntegerField(blank=True, help_text='Durée moyenne du cycle (jours)', null=True)),
                ('conversion_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Taux de conversion global (%)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_active', models.BooleanField(default=True, help_text='Pipeline actif')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('company_category', models.ForeignKey(blank=True, help_text="Secteur d'application du pipeline", null=True, on_delete=django.db.models.deletion.SET_NULL, to='company_categorization_core.industrycategory')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pipeline CRM',
                'verbose_name_plural': 'Pipelines CRM',
                'db_table': 'crm_pipeline',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False, help_text='Pipeline/Stage par défaut')),
                ('sort_order', models.IntegerField(default=0, help_text="Ordre d'affichage")),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="Nom de l'étape", max_length=100)),
                ('stage_type', models.CharField(choices=[('open', 'Ouvert'), ('closed_won', 'Fermé Gagné'), ('closed_lost', 'Fermé Perdu'), ('on_hold', 'En Attente'), ('qualification', 'Qualification'), ('proposal', 'Proposition'), ('negotiation', 'Négociation'), ('decision', 'Décision')], default='open', help_text="Type d'étape", max_length=20)),
                ('order', models.IntegerField(help_text='Ordre dans le pipeline')),
                ('default_probability', models.IntegerField(default=0, help_text='Probabilité par défaut (%)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('expected_duration_days', models.IntegerField(blank=True, help_text='Durée moyenne attendue (jours)', null=True)),
                ('is_closed_won', models.BooleanField(default=False, help_text='Étape de fermeture gagnée')),
                ('is_closed_lost', models.BooleanField(default=False, help_text='Étape de fermeture perdue')),
                ('description', models.TextField(blank=True, help_text="Description de l'étape")),
                ('color_code', models.CharField(default='#6a5acd', help_text='Code couleur hex', max_length=7)),
                ('required_fields', models.JSONField(blank=True, default=list, help_text='Champs obligatoires pour cette étape')),
                ('notify_on_entry', models.BooleanField(default=False, help_text="Notifier à l'entrée dans l'étape")),
                ('notify_on_stale', models.BooleanField(default=False, help_text='Notifier si stagnation')),
                ('stale_days_threshold', models.IntegerField(blank=True, help_text='Seuil de stagnation (jours)', null=True)),
                ('can_skip', models.BooleanField(default=True, help_text='Peut être ignorée')),
                ('requires_approval', models.BooleanField(default=False, help_text='Nécessite approbation pour sortir')),
                ('conversion_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Taux de conversion vers étape suivante (%)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('average_duration', models.DecimalField(blank=True, decimal_places=2, help_text='Durée moyenne réelle (jours)', max_digits=8, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Étape active')),
                ('approval_users', models.ManyToManyField(blank=True, help_text='Utilisateurs qui peuvent approuver', related_name='stage_approvals', to=settings.AUTH_USER_MODEL)),
                ('auto_assign_to', models.ForeignKey(blank=True, help_text='Assignation automatique', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auto_assigned_stages', to=settings.AUTH_USER_MODEL)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('company_category', models.ForeignKey(blank=True, help_text="Secteur d'application du pipeline", null=True, on_delete=django.db.models.deletion.SET_NULL, to='company_categorization_core.industrycategory')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('pipeline', models.ForeignKey(help_text='Pipeline parent', on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='crm_pipeline_core.pipeline')),
            ],
            options={
                'verbose_name': 'Étape Pipeline',
                'verbose_name_plural': 'Étapes Pipeline',
                'db_table': 'crm_stage',
                'ordering': ['pipeline', 'order'],
            },
        ),
        migrations.CreateModel(
            name='StageTransition',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('is_default', models.BooleanField(default=False, help_text='Pipeline/Stage par défaut')),
                ('sort_order', models.IntegerField(default=0, help_text="Ordre d'affichage")),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transition_type', models.CharField(choices=[('forward', 'Progression'), ('backward', 'Régression'), ('skip', "Saut d'étape"), ('reset', 'Remise à zéro')], help_text='Type de transition', max_length=15)),
                ('transition_date', models.DateTimeField(auto_now_add=True, help_text='Date de transition')),
                ('reason', models.TextField(blank=True, help_text='Raison de la transition')),
                ('duration_in_previous_stage', models.IntegerField(blank=True, help_text="Durée dans l'étape précédente (heures)", null=True)),
                ('requires_approval', models.BooleanField(default=False, help_text='Transition nécessite approbation')),
                ('approved', models.BooleanField(default=True, help_text='Transition approuvée')),
                ('approved_at', models.DateTimeField(blank=True, help_text="Date d'approbation", null=True)),
                ('approved_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a approuvé', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_stage_transitions', to=settings.AUTH_USER_MODEL)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('company_category', models.ForeignKey(blank=True, help_text="Secteur d'application du pipeline", null=True, on_delete=django.db.models.deletion.SET_NULL, to='company_categorization_core.industrycategory')),
                ('from_stage', models.ForeignKey(blank=True, help_text='Étape source', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transitions_from', to='crm_pipeline_core.stage')),
                ('opportunity', models.ForeignKey(help_text='Opportunité concernée', on_delete=django.db.models.deletion.CASCADE, related_name='stage_transitions', to='crm_entities_core.opportunity')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('to_stage', models.ForeignKey(help_text='Étape destination', on_delete=django.db.models.deletion.CASCADE, related_name='transitions_to', to='crm_pipeline_core.stage')),
                ('transitioned_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a effectué la transition', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_stage_transitions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transition Étape',
                'verbose_name_plural': 'Transitions Étapes',
                'db_table': 'crm_stage_transition',
                'ordering': ['-transition_date'],
                'indexes': [models.Index(fields=['opportunity', 'transition_date'], name='crm_stage_t_opportu_fe063e_idx'), models.Index(fields=['from_stage', 'to_stage'], name='crm_stage_t_from_st_1ea6a1_idx'), models.Index(fields=['transition_type'], name='crm_stage_t_transit_4199dc_idx'), models.Index(fields=['approved'], name='crm_stage_t_approve_275e18_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='stage',
            index=models.Index(fields=['pipeline', 'order'], name='crm_stage_pipelin_96c608_idx'),
        ),
        migrations.AddIndex(
            model_name='stage',
            index=models.Index(fields=['stage_type'], name='crm_stage_stage_t_ffec12_idx'),
        ),
        migrations.AddIndex(
            model_name='stage',
            index=models.Index(fields=['is_active'], name='crm_stage_is_acti_236494_idx'),
        ),
        migrations.AddIndex(
            model_name='stage',
            index=models.Index(fields=['is_closed_won', 'is_closed_lost'], name='crm_stage_is_clos_134a5f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stage',
            unique_together={('pipeline', 'order')},
        ),
        migrations.AddIndex(
            model_name='pipeline',
            index=models.Index(fields=['brand', 'pipeline_type'], name='crm_pipelin_brand_i_df6409_idx'),
        ),
        migrations.AddIndex(
            model_name='pipeline',
            index=models.Index(fields=['is_active', 'is_default'], name='crm_pipelin_is_acti_74d82f_idx'),
        ),
        migrations.AddIndex(
            model_name='pipeline',
            index=models.Index(fields=['company_category', 'pipeline_type'], name='crm_pipelin_company_95f1f8_idx'),
        ),
    ]
