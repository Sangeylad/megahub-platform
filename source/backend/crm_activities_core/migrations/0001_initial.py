# Generated by Django 4.2.23 on 2025-07-22 11:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('brands_core', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('related_object_id', models.UUIDField(help_text="ID de l'entité liée")),
                ('scheduled_date', models.DateTimeField(blank=True, help_text='Date programmée', null=True)),
                ('completed_date', models.DateTimeField(blank=True, help_text='Date de completion', null=True)),
                ('due_date', models.DateTimeField(blank=True, help_text="Date d'échéance", null=True)),
                ('is_completed', models.BooleanField(default=False, help_text='Activité terminée')),
                ('is_high_priority', models.BooleanField(default=False, help_text='Priorité élevée')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subject', models.CharField(help_text="Sujet de l'activité", max_length=255)),
                ('activity_type', models.CharField(choices=[('call', 'Appel'), ('email', 'Email'), ('meeting', 'Réunion'), ('task', 'Tâche'), ('note', 'Note'), ('comment', 'Commentaire'), ('reminder', 'Rappel'), ('demo', 'Démonstration'), ('proposal', 'Proposition'), ('follow_up', 'Suivi'), ('other', 'Autre')], help_text="Type d'activité", max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyenne'), ('high', 'Élevée'), ('urgent', 'Urgente')], default='medium', help_text='Priorité', max_length=10)),
                ('status', models.CharField(choices=[('planned', 'Planifié'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('cancelled', 'Annulé'), ('postponed', 'Reporté')], default='planned', help_text='Statut', max_length=15)),
                ('description', models.TextField(blank=True, help_text='Description détaillée')),
                ('location', models.CharField(blank=True, help_text='Lieu (réunions, appels)', max_length=255)),
                ('duration_minutes', models.IntegerField(blank=True, help_text='Durée en minutes', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('outcome', models.TextField(blank=True, help_text="Résultat/Notes de l'activité")),
                ('satisfaction_score', models.IntegerField(blank=True, help_text='Score de satisfaction (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('follow_up_required', models.BooleanField(default=False, help_text='Nécessite un suivi')),
                ('follow_up_date', models.DateTimeField(blank=True, help_text='Date de suivi', null=True)),
                ('follow_up_notes', models.TextField(blank=True, help_text='Notes pour le suivi')),
                ('created_by_automation', models.BooleanField(default=False, help_text='Créé par automatisation')),
                ('automation_rule_id', models.UUIDField(blank=True, help_text="ID de la règle d'automatisation", null=True)),
                ('assigned_to', models.ForeignKey(help_text='Utilisateur assigné à cette activité', on_delete=django.db.models.deletion.CASCADE, related_name='assigned_activities_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activité CRM',
                'verbose_name_plural': 'Activités CRM',
                'db_table': 'crm_activity',
                'ordering': ['-scheduled_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityTemplate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('related_object_id', models.UUIDField(help_text="ID de l'entité liée")),
                ('scheduled_date', models.DateTimeField(blank=True, help_text='Date programmée', null=True)),
                ('completed_date', models.DateTimeField(blank=True, help_text='Date de completion', null=True)),
                ('due_date', models.DateTimeField(blank=True, help_text="Date d'échéance", null=True)),
                ('is_completed', models.BooleanField(default=False, help_text='Activité terminée')),
                ('is_high_priority', models.BooleanField(default=False, help_text='Priorité élevée')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom du template', max_length=100)),
                ('template_data', models.JSONField(default=dict, help_text='Données du template')),
                ('is_public', models.BooleanField(default=False, help_text='Template public')),
                ('usage_count', models.IntegerField(default=0, help_text='Utilisations')),
                ('category', models.CharField(blank=True, help_text='Catégorie', max_length=50)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags')),
                ('assigned_to', models.ForeignKey(help_text='Utilisateur assigné à cette activité', on_delete=django.db.models.deletion.CASCADE, related_name='assigned_activities_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('related_content_type', models.ForeignKey(help_text="Type d'entité liée (Account, Contact, Opportunity)", on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Template Activité',
                'verbose_name_plural': 'Templates Activités',
                'db_table': 'crm_activity_template',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ActivityParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('organizer', 'Organisateur'), ('required', 'Requis'), ('optional', 'Optionnel'), ('observer', 'Observateur')], default='required', help_text='Rôle', max_length=15)),
                ('status', models.CharField(choices=[('invited', 'Invité'), ('accepted', 'Accepté'), ('declined', 'Décliné'), ('tentative', 'Incertain'), ('attended', 'Présent'), ('absent', 'Absent')], default='invited', help_text='Statut', max_length=15)),
                ('invited_at', models.DateTimeField(auto_now_add=True, help_text='Invité le')),
                ('responded_at', models.DateTimeField(blank=True, help_text='Réponse le', null=True)),
                ('notes', models.TextField(blank=True, help_text='Notes')),
                ('activity', models.ForeignKey(help_text='Activité', on_delete=django.db.models.deletion.CASCADE, to='crm_activities_core.activity')),
                ('user', models.ForeignKey(help_text='Participant', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Participant Activité',
                'verbose_name_plural': 'Participants Activités',
                'db_table': 'crm_activity_participant',
                'ordering': ['role', 'user__first_name'],
                'unique_together': {('activity', 'user')},
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='participants',
            field=models.ManyToManyField(blank=True, help_text='Participants', related_name='participated_activities', through='crm_activities_core.ActivityParticipant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='activity',
            name='related_content_type',
            field=models.ForeignKey(help_text="Type d'entité liée (Account, Contact, Opportunity)", on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['activity_type', 'status'], name='crm_activit_activit_8cd09c_idx'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['priority', 'due_date'], name='crm_activit_priorit_772f7e_idx'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['follow_up_required', 'follow_up_date'], name='crm_activit_follow__3d9afb_idx'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['created_by_automation'], name='crm_activit_created_7975bb_idx'),
        ),
    ]
