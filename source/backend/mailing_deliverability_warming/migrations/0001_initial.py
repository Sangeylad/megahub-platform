# Generated by Django 4.2.23 on 2025-07-26 20:35

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mailing_deliverability_core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='IPWarming',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('campaign_name', models.CharField(max_length=255)),
                ('target_ip', models.GenericIPAddressField()),
                ('target_domain', models.CharField(max_length=255)),
                ('warmup_status', models.CharField(default='active', max_length=30)),
                ('start_volume', models.IntegerField(default=50)),
                ('current_volume', models.IntegerField(default=50)),
                ('target_volume', models.IntegerField(default=10000)),
                ('daily_increase_percent', models.DecimalField(decimal_places=2, default=10, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('warmup_duration_days', models.IntegerField(default=30)),
                ('current_day', models.IntegerField(default=1)),
                ('reputation_threshold', models.DecimalField(decimal_places=2, default=80, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('bounce_rate_threshold', models.DecimalField(decimal_places=4, default=0.05, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('algorithm_config', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mailing_deliverability_core.deliverabilityconfig')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WarmupPartner',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('domain', models.CharField(max_length=255)),
                ('provider', models.CharField(max_length=100)),
                ('trust_score', models.DecimalField(decimal_places=2, default=50, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('engagement_rate', models.DecimalField(decimal_places=4, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('preferred_send_times', models.JSONField(default=list)),
                ('timezone', models.CharField(default='Europe/Paris', max_length=50)),
                ('language', models.CharField(default='fr', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('last_email_sent', models.DateTimeField(blank=True, null=True)),
                ('total_emails_sent', models.IntegerField(default=0)),
                ('total_emails_opened', models.IntegerField(default=0)),
                ('total_emails_replied', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WarmupTemplate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('template_type', models.CharField(choices=[('business', 'Business'), ('conversation', 'Conversation'), ('reply', 'Reply'), ('introduction', 'Introduction')], max_length=30)),
                ('subject_templates', models.JSONField()),
                ('content_templates', models.JSONField()),
                ('variables', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('usage_frequency', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('language', models.CharField(default='fr', max_length=10)),
                ('sentiment', models.CharField(choices=[('positive', 'Positive'), ('neutral', 'Neutral'), ('professional', 'Professional')], default='neutral', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WarmupEmail',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subject_line', models.CharField(max_length=300)),
                ('content', models.TextField()),
                ('sent_at', models.DateTimeField()),
                ('opened_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('replied_at', models.DateTimeField(blank=True, null=True)),
                ('engagement_score', models.DecimalField(decimal_places=4, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mailing_deliverability_warming.warmuppartner')),
                ('template_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mailing_deliverability_warming.warmuptemplate')),
                ('warming_campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warmup_emails', to='mailing_deliverability_warming.ipwarming')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WarmupMetrics',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('emails_sent', models.IntegerField(default=0)),
                ('emails_delivered', models.IntegerField(default=0)),
                ('emails_opened', models.IntegerField(default=0)),
                ('emails_clicked', models.IntegerField(default=0)),
                ('emails_replied', models.IntegerField(default=0)),
                ('emails_bounced', models.IntegerField(default=0)),
                ('reputation_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('volume_increase_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(-100), django.core.validators.MaxValueValidator(100)])),
                ('algorithm_adjustment', models.JSONField(default=dict)),
                ('warning_flags', models.JSONField(default=list)),
                ('warming_campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='mailing_deliverability_warming.ipwarming')),
            ],
            options={
                'unique_together': {('warming_campaign', 'date')},
            },
        ),
    ]
