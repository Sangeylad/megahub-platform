# Generated by Django 4.2.23 on 2025-07-22 08:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('company_categorization_core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_template', models.BooleanField(default=False, help_text='Élément template (réutilisable)')),
                ('version', models.CharField(default='1.0', help_text='Version', max_length=20)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom du workflow', max_length=100)),
                ('workflow_type', models.CharField(choices=[('lead_nurturing', 'Nurturing Leads'), ('deal_progression', 'Progression Affaires'), ('onboarding', 'Onboarding Client'), ('support', 'Support Client'), ('renewal', 'Renouvellement'), ('upsell', 'Montée en Gamme'), ('data_quality', 'Qualité Données'), ('reporting', 'Reporting'), ('custom', 'Personnalisé')], help_text='Type de workflow', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description du workflow')),
                ('trigger_event', models.CharField(choices=[('manual', 'Manuel'), ('record_created', 'Enregistrement Créé'), ('record_updated', 'Enregistrement Mis à Jour'), ('field_changed', 'Champ Modifié'), ('stage_changed', 'Étape Modifiée'), ('date_reached', 'Date Atteinte'), ('activity_completed', 'Activité Terminée'), ('email_opened', 'Email Ouvert'), ('form_submitted', 'Formulaire Soumis')], help_text='Événement déclencheur', max_length=20)),
                ('trigger_object', models.CharField(help_text='Objet déclencheur (Account, Contact, etc.)', max_length=50)),
                ('trigger_conditions', models.JSONField(blank=True, default=dict, help_text='Conditions de déclenchement en JSON')),
                ('is_active', models.BooleanField(default=True, help_text='Workflow actif')),
                ('is_automatic', models.BooleanField(default=True, help_text='Exécution automatique')),
                ('execution_order', models.IntegerField(default=0, help_text="Ordre d'exécution si plusieurs workflows")),
                ('max_executions_per_record', models.IntegerField(blank=True, help_text="Nombre max d'exécutions par enregistrement", null=True)),
                ('execution_interval_hours', models.IntegerField(blank=True, help_text='Intervalle minimum entre exécutions (heures)', null=True)),
                ('total_executions', models.IntegerField(default=0, help_text="Nombre total d'exécutions")),
                ('successful_executions', models.IntegerField(default=0, help_text='Exécutions réussies')),
                ('failed_executions', models.IntegerField(default=0, help_text='Exécutions échouées')),
                ('last_execution_date', models.DateTimeField(blank=True, help_text='Dernière exécution', null=True)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('company_category', models.ForeignKey(blank=True, help_text="Secteur d'application du workflow", null=True, on_delete=django.db.models.deletion.SET_NULL, to='company_categorization_core.industrycategory')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Workflow CRM',
                'verbose_name_plural': 'Workflows CRM',
                'db_table': 'crm_workflow',
                'ordering': ['execution_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowStep',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_template', models.BooleanField(default=False, help_text='Élément template (réutilisable)')),
                ('version', models.CharField(default='1.0', help_text='Version', max_length=20)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="Nom de l'étape", max_length=100)),
                ('step_type', models.CharField(choices=[('condition', 'Condition'), ('action', 'Action'), ('wait', 'Attente'), ('email', 'Envoi Email'), ('task', 'Créer Tâche'), ('update_field', 'Mettre à Jour Champ'), ('webhook', 'Webhook'), ('approval', 'Approbation'), ('notification', 'Notification'), ('branch', 'Embranchement')], help_text="Type d'étape", max_length=20)),
                ('step_order', models.IntegerField(help_text="Ordre d'exécution")),
                ('step_config', models.JSONField(default=dict, help_text="Configuration spécifique de l'étape")),
                ('conditions', models.JSONField(blank=True, default=dict, help_text="Conditions d'exécution de l'étape")),
                ('delay_hours', models.IntegerField(default=0, help_text='Délai avant exécution (heures)')),
                ('delay_business_hours_only', models.BooleanField(default=False, help_text='Délai en heures ouvrées uniquement')),
                ('is_active', models.BooleanField(default=True, help_text='Étape active')),
                ('description', models.TextField(blank=True, help_text="Description de l'étape")),
                ('execution_count', models.IntegerField(default=0, help_text="Nombre d'exécutions")),
                ('success_count', models.IntegerField(default=0, help_text='Succès')),
                ('failure_count', models.IntegerField(default=0, help_text='Échecs')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('company_category', models.ForeignKey(blank=True, help_text="Secteur d'application du workflow", null=True, on_delete=django.db.models.deletion.SET_NULL, to='company_categorization_core.industrycategory')),
                ('next_step_failure', models.ForeignKey(blank=True, help_text='Étape suivante si échec', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='failure_predecessors', to='crm_workflow_core.workflowstep')),
                ('next_step_success', models.ForeignKey(blank=True, help_text='Étape suivante si succès', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='success_predecessors', to='crm_workflow_core.workflowstep')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(help_text='Workflow parent', on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='crm_workflow_core.workflow')),
            ],
            options={
                'verbose_name': 'Étape Workflow',
                'verbose_name_plural': 'Étapes Workflow',
                'db_table': 'crm_workflow_step',
                'ordering': ['workflow', 'step_order'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowExecution',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('is_template', models.BooleanField(default=False, help_text='Élément template (réutilisable)')),
                ('version', models.CharField(default='1.0', help_text='Version', max_length=20)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('target_object_id', models.UUIDField(help_text="ID de l'enregistrement cible")),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('running', 'En cours'), ('paused', 'En pause'), ('completed', 'Terminé'), ('failed', 'Échoué'), ('cancelled', 'Annulé')], default='pending', help_text="Statut d'exécution", max_length=15)),
                ('started_at', models.DateTimeField(blank=True, help_text='Démarrage', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Completion', null=True)),
                ('next_execution_at', models.DateTimeField(blank=True, help_text='Prochaine exécution programmée', null=True)),
                ('execution_context', models.JSONField(default=dict, help_text="Contexte d'exécution (variables, état)")),
                ('trigger_context', models.JSONField(default=dict, help_text='Contexte du déclenchement')),
                ('result_summary', models.JSONField(blank=True, default=dict, help_text='Résumé des résultats')),
                ('error_message', models.TextField(blank=True, help_text="Message d'erreur si échec")),
                ('steps_completed', models.IntegerField(default=0, help_text="Nombre d'étapes terminées")),
                ('steps_failed', models.IntegerField(default=0, help_text="Nombre d'étapes échouées")),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('company_category', models.ForeignKey(blank=True, help_text="Secteur d'application du workflow", null=True, on_delete=django.db.models.deletion.SET_NULL, to='company_categorization_core.industrycategory')),
                ('current_step', models.ForeignKey(blank=True, help_text='Étape actuelle', null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm_workflow_core.workflowstep')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('target_content_type', models.ForeignKey(help_text="Type d'enregistrement cible", on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('workflow', models.ForeignKey(help_text='Workflow exécuté', on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='crm_workflow_core.workflow')),
            ],
            options={
                'verbose_name': 'Exécution Workflow',
                'verbose_name_plural': 'Exécutions Workflow',
                'db_table': 'crm_workflow_execution',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowStepExecution',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('is_template', models.BooleanField(default=False, help_text='Élément template (réutilisable)')),
                ('version', models.CharField(default='1.0', help_text='Version', max_length=20)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('running', 'En cours'), ('completed', 'Terminé'), ('failed', 'Échoué'), ('skipped', 'Ignoré'), ('waiting', 'En attente délai')], default='pending', help_text="Statut d'exécution", max_length=15)),
                ('scheduled_at', models.DateTimeField(help_text='Programmé pour')),
                ('started_at', models.DateTimeField(blank=True, help_text='Démarrage', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Completion', null=True)),
                ('execution_result', models.JSONField(blank=True, default=dict, help_text="Résultat de l'exécution")),
                ('error_details', models.TextField(blank=True, help_text="Détails de l'erreur")),
                ('attempt_number', models.IntegerField(default=1, help_text='Numéro de tentative')),
                ('max_retries', models.IntegerField(default=3, help_text='Nombre max de tentatives')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('company_category', models.ForeignKey(blank=True, help_text="Secteur d'application du workflow", null=True, on_delete=django.db.models.deletion.SET_NULL, to='company_categorization_core.industrycategory')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('workflow_execution', models.ForeignKey(help_text='Exécution workflow parent', on_delete=django.db.models.deletion.CASCADE, related_name='step_executions', to='crm_workflow_core.workflowexecution')),
                ('workflow_step', models.ForeignKey(help_text='Étape exécutée', on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='crm_workflow_core.workflowstep')),
            ],
            options={
                'verbose_name': 'Exécution Étape',
                'verbose_name_plural': 'Exécutions Étapes',
                'db_table': 'crm_workflow_step_execution',
                'ordering': ['workflow_execution', 'workflow_step__step_order'],
                'indexes': [models.Index(fields=['workflow_execution', 'status'], name='crm_workflo_workflo_3b56bf_idx'), models.Index(fields=['workflow_step', 'status'], name='crm_workflo_workflo_c39904_idx'), models.Index(fields=['scheduled_at', 'status'], name='crm_workflo_schedul_5b915e_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='workflowstep',
            index=models.Index(fields=['workflow', 'step_order'], name='crm_workflo_workflo_c28040_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowstep',
            index=models.Index(fields=['step_type', 'is_active'], name='crm_workflo_step_ty_63ba79_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='workflowstep',
            unique_together={('workflow', 'step_order')},
        ),
        migrations.AddIndex(
            model_name='workflowexecution',
            index=models.Index(fields=['workflow', 'status'], name='crm_workflo_workflo_78e836_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowexecution',
            index=models.Index(fields=['target_content_type', 'target_object_id'], name='crm_workflo_target__c95c03_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowexecution',
            index=models.Index(fields=['status', 'next_execution_at'], name='crm_workflo_status_af0c66_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowexecution',
            index=models.Index(fields=['started_at', 'completed_at'], name='crm_workflo_started_6376cd_idx'),
        ),
        migrations.AddIndex(
            model_name='workflow',
            index=models.Index(fields=['workflow_type', 'is_active'], name='crm_workflo_workflo_173267_idx'),
        ),
        migrations.AddIndex(
            model_name='workflow',
            index=models.Index(fields=['trigger_event', 'trigger_object'], name='crm_workflo_trigger_27120c_idx'),
        ),
        migrations.AddIndex(
            model_name='workflow',
            index=models.Index(fields=['execution_order'], name='crm_workflo_executi_128e99_idx'),
        ),
        migrations.AddIndex(
            model_name='workflow',
            index=models.Index(fields=['last_execution_date'], name='crm_workflo_last_ex_7db45a_idx'),
        ),
    ]
