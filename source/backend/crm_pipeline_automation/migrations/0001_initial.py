# Generated by Django 4.2.23 on 2025-07-22 08:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('crm_entities_core', '0001_initial'),
        ('brands_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AutomationTrigger',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom du déclencheur', max_length=100)),
                ('event_type', models.CharField(help_text="Type d'événement", max_length=50)),
                ('conditions', models.JSONField(default=dict, help_text='Conditions de déclenchement')),
                ('is_active', models.BooleanField(default=True, help_text='Déclencheur actif')),
            ],
            options={
                'verbose_name': 'Déclencheur Automatisation',
                'verbose_name_plural': 'Déclencheurs Automatisation',
                'db_table': 'crm_automation_trigger',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PipelineRule',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom de la règle', max_length=100)),
                ('trigger_type', models.CharField(choices=[('stage_entry', 'Entrée dans étape'), ('stage_exit', "Sortie d'étape"), ('time_based', 'Basé sur le temps'), ('field_change', 'Changement de champ'), ('amount_threshold', 'Seuil montant'), ('probability_change', 'Changement probabilité'), ('activity_created', 'Activité créée'), ('no_activity', "Absence d'activité")], help_text='Type de déclencheur', max_length=20)),
                ('trigger_conditions', models.JSONField(default=dict, help_text='Conditions du déclencheur en JSON')),
                ('action_type', models.CharField(choices=[('move_stage', 'Déplacer vers étape'), ('assign_user', 'Assigner utilisateur'), ('send_email', 'Envoyer email'), ('create_task', 'Créer tâche'), ('update_field', 'Mettre à jour champ'), ('send_notification', 'Envoyer notification'), ('create_activity', 'Créer activité'), ('webhook', 'Webhook')], help_text="Type d'action", max_length=20)),
                ('action_config', models.JSONField(default=dict, help_text="Configuration de l'action en JSON")),
                ('delay_minutes', models.IntegerField(default=0, help_text='Délai avant exécution (minutes)')),
                ('business_hours_only', models.BooleanField(default=False, help_text='Exécuter uniquement en heures ouvrées')),
                ('additional_conditions', models.JSONField(blank=True, default=dict, help_text='Conditions supplémentaires')),
                ('is_active', models.BooleanField(default=True, help_text='Règle active')),
                ('priority', models.IntegerField(default=0, help_text="Priorité d'exécution")),
                ('execution_count', models.IntegerField(default=0, help_text="Nombre d'exécutions")),
                ('success_count', models.IntegerField(default=0, help_text='Exécutions réussies')),
                ('last_execution', models.DateTimeField(blank=True, help_text='Dernière exécution', null=True)),
                ('description', models.TextField(blank=True, help_text='Description de la règle')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Règle Pipeline',
                'verbose_name_plural': 'Règles Pipeline',
                'db_table': 'crm_pipeline_rule',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RuleExecution',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('running', 'En cours'), ('success', 'Succès'), ('failed', 'Échec'), ('skipped', 'Ignoré')], default='pending', help_text="Statut d'exécution", max_length=15)),
                ('scheduled_at', models.DateTimeField(help_text='Programmé pour')),
                ('started_at', models.DateTimeField(blank=True, help_text='Démarré à', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Terminé à', null=True)),
                ('trigger_context', models.JSONField(default=dict, help_text='Contexte du déclenchement')),
                ('execution_result', models.JSONField(blank=True, default=dict, help_text="Résultat de l'exécution")),
                ('error_message', models.TextField(blank=True, help_text="Message d'erreur si échec")),
                ('retry_count', models.IntegerField(default=0, help_text='Nombre de tentatives')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('opportunity', models.ForeignKey(help_text='Opportunité concernée', on_delete=django.db.models.deletion.CASCADE, related_name='rule_executions', to='crm_entities_core.opportunity')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('rule', models.ForeignKey(help_text='Règle exécutée', on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='crm_pipeline_automation.pipelinerule')),
            ],
            options={
                'verbose_name': 'Exécution Règle',
                'verbose_name_plural': 'Exécutions Règles',
                'db_table': 'crm_rule_execution',
                'ordering': ['-scheduled_at'],
            },
        ),
    ]
