# Generated by Django 4.2.23 on 2025-07-22 11:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands_core', '0002_initial'),
        ('crm_activities_core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunicationActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('external_reference_id', models.CharField(blank=True, help_text='ID externe (système téléphonie, email)', max_length=100)),
                ('provider', models.CharField(blank=True, help_text='Fournisseur (Zoom, Gmail, etc.)', max_length=50)),
                ('has_recording', models.BooleanField(default=False, help_text='Enregistrement disponible')),
                ('recording_url', models.URLField(blank=True, help_text='URL enregistrement')),
                ('activity', models.OneToOneField(help_text='Activité de base', on_delete=django.db.models.deletion.CASCADE, related_name='communication_details', to='crm_activities_core.activity')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Détails Communication',
                'verbose_name_plural': 'Détails Communications',
                'db_table': 'crm_communication_activity',
            },
        ),
        migrations.CreateModel(
            name='MeetingActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('meeting_type', models.CharField(choices=[('in_person', 'En personne'), ('video_call', 'Visioconférence'), ('phone_call', 'Téléconférence'), ('webinar', 'Webinaire')], help_text='Type de réunion', max_length=20)),
                ('start_time', models.DateTimeField(help_text='Début')),
                ('end_time', models.DateTimeField(help_text='Fin')),
                ('timezone', models.CharField(default='Europe/Paris', help_text='Fuseau horaire', max_length=50)),
                ('meeting_room', models.CharField(blank=True, help_text='Salle', max_length=100)),
                ('meeting_url', models.URLField(blank=True, help_text='URL réunion')),
                ('meeting_id', models.CharField(blank=True, help_text='ID réunion', max_length=50)),
                ('passcode', models.CharField(blank=True, help_text='Code', max_length=20)),
                ('agenda', models.TextField(blank=True, help_text='Ordre du jour')),
                ('meeting_notes', models.TextField(blank=True, help_text='Notes')),
                ('action_items', models.JSONField(blank=True, default=list, help_text='Actions')),
                ('decisions_made', models.JSONField(blank=True, default=list, help_text='Décisions')),
                ('external_participants', models.JSONField(blank=True, default=list, help_text='Participants externes')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('communication', models.OneToOneField(help_text='Détails communication', on_delete=django.db.models.deletion.CASCADE, related_name='meeting_details', to='crm_activities_communication.communicationactivity')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Détails Réunion',
                'verbose_name_plural': 'Détails Réunions',
                'db_table': 'crm_meeting_activity',
            },
        ),
        migrations.CreateModel(
            name='EmailActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('from_email', models.EmailField(help_text='Expéditeur', max_length=254)),
                ('to_emails', models.JSONField(default=list, help_text='Destinataires')),
                ('cc_emails', models.JSONField(blank=True, default=list, help_text='Copie')),
                ('bcc_emails', models.JSONField(blank=True, default=list, help_text='Copie cachée')),
                ('email_type', models.CharField(choices=[('outbound', 'Sortant'), ('inbound', 'Entrant'), ('reply', 'Réponse'), ('forward', 'Transfert')], help_text="Type d'email", max_length=15)),
                ('body_text', models.TextField(blank=True, help_text='Corps texte')),
                ('body_html', models.TextField(blank=True, help_text='Corps HTML')),
                ('has_attachments', models.BooleanField(default=False, help_text='Pièces jointes')),
                ('attachments_count', models.IntegerField(default=0, help_text='Nombre PJ')),
                ('is_opened', models.BooleanField(default=False, help_text='Ouvert')),
                ('opened_date', models.DateTimeField(blank=True, help_text='Date ouverture', null=True)),
                ('open_count', models.IntegerField(default=0, help_text='Nb ouvertures')),
                ('is_replied', models.BooleanField(default=False, help_text='Répondu')),
                ('thread_id', models.CharField(blank=True, help_text='Thread ID', max_length=255)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('communication', models.OneToOneField(help_text='Détails communication', on_delete=django.db.models.deletion.CASCADE, related_name='email_details', to='crm_activities_communication.communicationactivity')),
                ('in_reply_to', models.ForeignKey(blank=True, help_text='En réponse à', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='crm_activities_communication.emailactivity')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Détails Email',
                'verbose_name_plural': 'Détails Emails',
                'db_table': 'crm_email_activity',
            },
        ),
        migrations.CreateModel(
            name='CallActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('phone_number', models.CharField(help_text='Numéro de téléphone', max_length=20)),
                ('contact_name', models.CharField(blank=True, help_text='Nom du contact', max_length=100)),
                ('call_type', models.CharField(choices=[('inbound', 'Entrant'), ('outbound', 'Sortant'), ('missed', 'Manqué')], help_text="Type d'appel", max_length=15)),
                ('call_outcome', models.CharField(blank=True, choices=[('answered', 'Répondu'), ('no_answer', 'Pas de réponse'), ('voicemail', 'Messagerie'), ('busy', 'Occupé'), ('disconnected', 'Raccroché'), ('callback_requested', 'Rappel demandé')], help_text='Résultat', max_length=20)),
                ('duration_seconds', models.IntegerField(blank=True, help_text='Durée (secondes)', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('call_start_time', models.DateTimeField(blank=True, help_text='Début', null=True)),
                ('call_end_time', models.DateTimeField(blank=True, help_text='Fin', null=True)),
                ('call_quality', models.IntegerField(blank=True, help_text='Qualité (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('communication', models.OneToOneField(help_text='Détails communication', on_delete=django.db.models.deletion.CASCADE, related_name='call_details', to='crm_activities_communication.communicationactivity')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Détails Appel',
                'verbose_name_plural': 'Détails Appels',
                'db_table': 'crm_call_activity',
            },
        ),
    ]
