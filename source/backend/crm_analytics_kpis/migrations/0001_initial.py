# Generated by Django 4.2.23 on 2025-07-22 09:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands_core', '0002_initial'),
        ('company_categorization_core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom du KPI', max_length=100)),
                ('display_name', models.CharField(help_text="Nom d'affichage", max_length=150)),
                ('category', models.CharField(choices=[('sales', 'Ventes'), ('marketing', 'Marketing'), ('customer_service', 'Service Client'), ('team_performance', 'Performance Équipe'), ('pipeline', 'Pipeline'), ('retention', 'Fidélisation'), ('acquisition', 'Acquisition'), ('profitability', 'Rentabilité')], help_text='Catégorie du KPI', max_length=20)),
                ('kpi_type', models.CharField(choices=[('count', 'Compteur'), ('rate', 'Taux'), ('average', 'Moyenne'), ('ratio', 'Ratio'), ('score', 'Score'), ('index', 'Indice'), ('percentage', 'Pourcentage')], help_text='Type de KPI', max_length=15)),
                ('description', models.TextField(help_text='Description du KPI')),
                ('calculation_method', models.TextField(help_text='Méthode de calcul')),
                ('data_sources', models.JSONField(default=list, help_text='Sources de données')),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, help_text='Valeur actuelle', max_digits=15, null=True)),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, help_text='Valeur cible', max_digits=15, null=True)),
                ('excellent_threshold', models.DecimalField(blank=True, decimal_places=2, help_text='Seuil excellent', max_digits=15, null=True)),
                ('good_threshold', models.DecimalField(blank=True, decimal_places=2, help_text='Seuil bon', max_digits=15, null=True)),
                ('warning_threshold', models.DecimalField(blank=True, decimal_places=2, help_text="Seuil d'alerte", max_digits=15, null=True)),
                ('critical_threshold', models.DecimalField(blank=True, decimal_places=2, help_text='Seuil critique', max_digits=15, null=True)),
                ('unit', models.CharField(blank=True, help_text='Unité', max_length=20)),
                ('format_string', models.CharField(blank=True, help_text="Format d'affichage", max_length=50)),
                ('color_scheme', models.CharField(default='default', help_text='Schéma de couleurs', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='KPI actif')),
                ('is_featured', models.BooleanField(default=False, help_text='KPI mis en avant')),
                ('business_impact', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé'), ('critical', 'Critique')], default='medium', help_text='Impact business', max_length=20)),
                ('update_frequency', models.CharField(choices=[('real_time', 'Temps Réel'), ('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel')], default='daily', help_text='Fréquence de mise à jour', max_length=20)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('responsible_user', models.ForeignKey(blank=True, help_text='Responsable du KPI', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_kpis', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'KPI Analytics',
                'verbose_name_plural': 'KPIs Analytics',
                'db_table': 'crm_analytics_kpi',
                'ordering': ['-is_featured', 'category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Benchmark',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sample_size', models.IntegerField(help_text="Taille de l'échantillon")),
                ('median_value', models.DecimalField(decimal_places=2, help_text='Valeur médiane', max_digits=15)),
                ('mean_value', models.DecimalField(decimal_places=2, help_text='Valeur moyenne', max_digits=15)),
                ('percentile_25', models.DecimalField(decimal_places=2, help_text='25e percentile', max_digits=15)),
                ('percentile_75', models.DecimalField(decimal_places=2, help_text='75e percentile', max_digits=15)),
                ('percentile_90', models.DecimalField(decimal_places=2, help_text='90e percentile', max_digits=15)),
                ('top_10_percent_avg', models.DecimalField(blank=True, decimal_places=2, help_text='Moyenne des 10% meilleurs', max_digits=15, null=True)),
                ('data_source', models.CharField(help_text='Source des données', max_length=100)),
                ('methodology', models.TextField(blank=True, help_text='Méthodologie de calcul')),
                ('valid_from', models.DateField(help_text='Valide à partir de')),
                ('valid_to', models.DateField(help_text="Valide jusqu'à")),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('industry_category', models.ForeignKey(help_text='Catégorie industrie', on_delete=django.db.models.deletion.CASCADE, to='company_categorization_core.industrycategory')),
                ('kpi', models.ForeignKey(help_text='KPI benchmarké', on_delete=django.db.models.deletion.CASCADE, related_name='benchmarks', to='crm_analytics_kpis.kpi')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Benchmark KPI',
                'verbose_name_plural': 'Benchmarks KPI',
                'db_table': 'crm_kpi_benchmark',
                'ordering': ['-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entity_type', models.CharField(help_text="Type d'entité (User, Team, Brand)", max_length=50)),
                ('entity_id', models.UUIDField(help_text="ID de l'entité")),
                ('entity_name', models.CharField(help_text="Nom de l'entité", max_length=100)),
                ('value', models.DecimalField(decimal_places=2, help_text='Valeur de la performance', max_digits=15)),
                ('previous_value', models.DecimalField(blank=True, decimal_places=2, help_text='Valeur précédente', max_digits=15, null=True)),
                ('change_absolute', models.DecimalField(blank=True, decimal_places=2, help_text='Changement absolu', max_digits=15, null=True)),
                ('change_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Changement en pourcentage', max_digits=8, null=True)),
                ('context_data', models.JSONField(blank=True, default=dict, help_text='Données contextuelles')),
                ('notes', models.TextField(blank=True, help_text='Notes sur la performance')),
                ('measured_at', models.DateTimeField(help_text='Date de mesure')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('kpi', models.ForeignKey(help_text='KPI mesuré', on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='crm_analytics_kpis.kpi')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Performance',
                'verbose_name_plural': 'Performances',
                'db_table': 'crm_performance',
                'ordering': ['-measured_at'],
                'indexes': [models.Index(fields=['kpi', 'entity_type', 'entity_id'], name='crm_perform_kpi_id_5bcfb3_idx'), models.Index(fields=['measured_at'], name='crm_perform_measure_dfaf40_idx'), models.Index(fields=['value'], name='crm_perform_value_0d6694_idx')],
                'unique_together': {('kpi', 'entity_type', 'entity_id', 'measured_at')},
            },
        ),
        migrations.AddIndex(
            model_name='kpi',
            index=models.Index(fields=['category', 'kpi_type'], name='crm_analyti_categor_bc731b_idx'),
        ),
        migrations.AddIndex(
            model_name='kpi',
            index=models.Index(fields=['is_active', 'is_featured'], name='crm_analyti_is_acti_b67c21_idx'),
        ),
        migrations.AddIndex(
            model_name='kpi',
            index=models.Index(fields=['business_impact'], name='crm_analyti_busines_e9c19e_idx'),
        ),
        migrations.AddIndex(
            model_name='benchmark',
            index=models.Index(fields=['kpi', 'industry_category'], name='crm_kpi_ben_kpi_id_f56dd9_idx'),
        ),
        migrations.AddIndex(
            model_name='benchmark',
            index=models.Index(fields=['valid_from', 'valid_to'], name='crm_kpi_ben_valid_f_59ca63_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='benchmark',
            unique_together={('kpi', 'industry_category', 'valid_from')},
        ),
    ]
