# Generated by Django 4.2.23 on 2025-07-22 08:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EnrichmentProvider',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom du fournisseur', max_length=100)),
                ('provider_key', models.CharField(help_text='Clé unique du fournisseur', max_length=50, unique=True)),
                ('provider_type', models.CharField(choices=[('api', 'API'), ('file_import', 'Import Fichier'), ('manual', 'Manuel'), ('webhook', 'Webhook')], help_text='Type de fournisseur', max_length=15)),
                ('api_endpoint', models.URLField(blank=True, help_text='Endpoint API')),
                ('api_key', models.CharField(blank=True, help_text='Clé API (chiffrée)', max_length=255)),
                ('headers', models.JSONField(blank=True, default=dict, help_text='Headers par défaut')),
                ('daily_limit', models.IntegerField(blank=True, help_text="Limite quotidienne d'appels", null=True)),
                ('monthly_limit', models.IntegerField(blank=True, help_text="Limite mensuelle d'appels", null=True)),
                ('cost_per_call', models.DecimalField(blank=True, decimal_places=4, help_text='Coût par appel', max_digits=8, null=True)),
                ('total_calls', models.IntegerField(default=0, help_text="Total d'appels effectués")),
                ('successful_calls', models.IntegerField(default=0, help_text='Appels réussis')),
                ('failed_calls', models.IntegerField(default=0, help_text='Appels échoués')),
                ('status', models.CharField(choices=[('active', 'Actif'), ('inactive', 'Inactif'), ('error', 'Erreur'), ('rate_limited', 'Limite Dépassée')], default='active', help_text='Statut du fournisseur', max_length=15)),
                ('last_call_at', models.DateTimeField(blank=True, help_text='Dernier appel', null=True)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Fournisseur Enrichissement',
                'verbose_name_plural': 'Fournisseurs Enrichissement',
                'db_table': 'crm_enrichment_provider',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['provider_key'], name='crm_enrichm_provide_5fbc52_idx'), models.Index(fields=['status'], name='crm_enrichm_status_ff9e5f_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataEnrichment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entity_type', models.CharField(choices=[('account', 'Compte'), ('contact', 'Contact'), ('opportunity', 'Opportunité')], help_text="Type d'entité enrichie", max_length=15)),
                ('entity_id', models.UUIDField(help_text="ID de l'entité enrichie")),
                ('source', models.CharField(choices=[('linkedin', 'LinkedIn'), ('clearbit', 'Clearbit'), ('hunter_io', 'Hunter.io'), ('zoominfo', 'ZoomInfo'), ('apollo', 'Apollo'), ('lusha', 'Lusha'), ('societe_com', 'Société.com'), ('sirene', 'Base Sirene'), ('google_places', 'Google Places'), ('manual', 'Manuel'), ('import', 'Import'), ('api_custom', 'API Custom')], help_text="Source d'enrichissement", max_length=20)),
                ('enrichment_type', models.CharField(choices=[('basic_info', 'Informations de Base'), ('contact_info', 'Coordonnées'), ('social_profiles', 'Profils Sociaux'), ('company_data', 'Données Entreprise'), ('financial_data', 'Données Financières'), ('news_mentions', 'Mentions Presse'), ('technology_stack', 'Stack Technologique'), ('employee_data', 'Données Employés'), ('competitor_analysis', 'Analyse Concurrence')], help_text="Type d'enrichissement", max_length=20)),
                ('enriched_data', models.JSONField(default=dict, help_text='Données enrichies en JSON')),
                ('raw_response', models.JSONField(blank=True, default=dict, help_text="Réponse brute de l'API")),
                ('quality_score', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyenne'), ('high', 'Élevée'), ('verified', 'Vérifiée')], default='medium', help_text='Niveau de qualité', max_length=10)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, help_text='Score de confiance (0-1)', max_digits=4, null=True)),
                ('fields_enriched', models.JSONField(default=list, help_text='Liste des champs enrichis')),
                ('fields_updated', models.JSONField(default=list, help_text='Liste des champs mis à jour')),
                ('is_applied', models.BooleanField(default=False, help_text="Enrichissement appliqué à l'entité")),
                ('applied_at', models.DateTimeField(blank=True, help_text="Date d'application", null=True)),
                ('api_cost', models.DecimalField(blank=True, decimal_places=4, help_text='Coût API pour cet enrichissement', max_digits=8, null=True)),
                ('credits_consumed', models.IntegerField(blank=True, help_text='Crédits consommés', null=True)),
                ('is_validated', models.BooleanField(default=False, help_text='Données validées')),
                ('validated_at', models.DateTimeField(blank=True, help_text='Date de validation', null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text="Date d'expiration des données", null=True)),
                ('refresh_needed', models.BooleanField(default=False, help_text='Rafraîchissement nécessaire')),
                ('applied_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a appliqué', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applied_enrichments', to=settings.AUTH_USER_MODEL)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, help_text='Utilisateur qui a validé', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_enrichments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Enrichissement Données',
                'verbose_name_plural': 'Enrichissements Données',
                'db_table': 'crm_data_enrichment',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['entity_type', 'entity_id'], name='crm_data_en_entity__d249b6_idx'), models.Index(fields=['source', 'enrichment_type'], name='crm_data_en_source_3020c2_idx'), models.Index(fields=['is_applied', 'is_validated'], name='crm_data_en_is_appl_9560b6_idx'), models.Index(fields=['expires_at'], name='crm_data_en_expires_a30459_idx')],
                'unique_together': {('entity_type', 'entity_id', 'source', 'enrichment_type')},
            },
        ),
    ]
