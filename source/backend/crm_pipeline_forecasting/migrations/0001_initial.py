# Generated by Django 4.2.23 on 2025-07-22 08:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('crm_pipeline_core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PipelineForecast',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom de la prévision', max_length=100)),
                ('forecast_type', models.CharField(choices=[('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('annual', 'Annuel'), ('custom', 'Personnalisé')], help_text='Type de prévision', max_length=15)),
                ('start_date', models.DateField(help_text='Date de début')),
                ('end_date', models.DateField(help_text='Date de fin')),
                ('calculation_method', models.CharField(choices=[('probability_based', 'Basé sur probabilité'), ('historical_average', 'Moyenne historique'), ('linear_regression', 'Régression linéaire'), ('ml_model', 'Modèle ML'), ('manual', 'Manuel')], help_text='Méthode de calcul', max_length=20)),
                ('model_version', models.CharField(blank=True, help_text='Version du modèle (si ML)', max_length=20)),
                ('target_revenue', models.DecimalField(decimal_places=2, help_text='Objectif de revenus (€)', max_digits=15)),
                ('forecasted_revenue', models.DecimalField(decimal_places=2, help_text='Revenus prévus (€)', max_digits=15)),
                ('actual_revenue', models.DecimalField(blank=True, decimal_places=2, help_text='Revenus réels (€)', max_digits=15, null=True)),
                ('forecasted_deals', models.IntegerField(help_text="Nombre d'affaires prévues")),
                ('actual_deals', models.IntegerField(blank=True, help_text="Nombre d'affaires réelles", null=True)),
                ('confidence_score', models.DecimalField(decimal_places=2, help_text='Score de confiance (0-1)', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('accuracy_score', models.DecimalField(blank=True, decimal_places=2, help_text='Score de précision (%)', max_digits=5, null=True)),
                ('calculation_details', models.JSONField(default=dict, help_text='Détails du calcul')),
                ('assumptions', models.TextField(blank=True, help_text='Hypothèses de la prévision')),
                ('is_published', models.BooleanField(default=False, help_text='Prévision publiée')),
                ('is_locked', models.BooleanField(default=False, help_text='Prévision verrouillée')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('pipeline', models.ForeignKey(help_text='Pipeline concerné', on_delete=django.db.models.deletion.CASCADE, related_name='forecasts', to='crm_pipeline_core.pipeline')),
            ],
            options={
                'verbose_name': 'Prévision Pipeline',
                'verbose_name_plural': 'Prévisions Pipeline',
                'db_table': 'crm_pipeline_forecast',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ForecastSnapshot',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('snapshot_date', models.DateTimeField(auto_now_add=True, help_text="Date de l'instantané")),
                ('snapshot_data', models.JSONField(default=dict, help_text='Données complètes de la prévision')),
                ('total_pipeline_value', models.DecimalField(decimal_places=2, help_text='Valeur totale du pipeline', max_digits=15)),
                ('weighted_pipeline_value', models.DecimalField(decimal_places=2, help_text='Valeur pondérée du pipeline', max_digits=15)),
                ('opportunities_count', models.IntegerField(help_text="Nombre d'opportunités")),
                ('triggered_by', models.CharField(help_text="Déclencheur de l'instantané", max_length=50)),
                ('notes', models.TextField(blank=True, help_text="Notes sur l'instantané")),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('forecast', models.ForeignKey(help_text='Prévision parent', on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='crm_pipeline_forecasting.pipelineforecast')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Instantané Prévision',
                'verbose_name_plural': 'Instantanés Prévisions',
                'db_table': 'crm_forecast_snapshot',
                'ordering': ['-snapshot_date'],
            },
        ),
        migrations.CreateModel(
            name='ForecastMetric',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('revenue', 'Revenus'), ('deals_count', "Nombre d'affaires"), ('conversion_rate', 'Taux de conversion'), ('average_deal_size', 'Taille moyenne affaire'), ('sales_cycle', 'Cycle de vente'), ('win_rate', 'Taux de gain')], help_text='Type de métrique', max_length=20)),
                ('metric_name', models.CharField(help_text='Nom de la métrique', max_length=100)),
                ('target_value', models.DecimalField(decimal_places=2, help_text='Valeur cible', max_digits=15)),
                ('forecasted_value', models.DecimalField(decimal_places=2, help_text='Valeur prévue', max_digits=15)),
                ('actual_value', models.DecimalField(blank=True, decimal_places=2, help_text='Valeur réelle', max_digits=15, null=True)),
                ('unit', models.CharField(default='', help_text='Unité de mesure', max_length=20)),
                ('is_percentage', models.BooleanField(default=False, help_text='Métrique en pourcentage')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('forecast', models.ForeignKey(help_text='Prévision parent', on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='crm_pipeline_forecasting.pipelineforecast')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Métrique Prévision',
                'verbose_name_plural': 'Métriques Prévisions',
                'db_table': 'crm_forecast_metric',
                'ordering': ['metric_name'],
            },
        ),
        migrations.AddIndex(
            model_name='pipelineforecast',
            index=models.Index(fields=['pipeline', 'start_date'], name='crm_pipelin_pipelin_6ed534_idx'),
        ),
        migrations.AddIndex(
            model_name='pipelineforecast',
            index=models.Index(fields=['forecast_type', 'is_published'], name='crm_pipelin_forecas_3c0a40_idx'),
        ),
        migrations.AddIndex(
            model_name='pipelineforecast',
            index=models.Index(fields=['end_date'], name='crm_pipelin_end_dat_673033_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='pipelineforecast',
            unique_together={('pipeline', 'start_date', 'end_date', 'forecast_type')},
        ),
        migrations.AddIndex(
            model_name='forecastsnapshot',
            index=models.Index(fields=['forecast', 'snapshot_date'], name='crm_forecas_forecas_a2e68d_idx'),
        ),
        migrations.AddIndex(
            model_name='forecastsnapshot',
            index=models.Index(fields=['triggered_by'], name='crm_forecas_trigger_cc61b4_idx'),
        ),
        migrations.AddIndex(
            model_name='forecastmetric',
            index=models.Index(fields=['forecast', 'metric_type'], name='crm_forecas_forecas_d23483_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='forecastmetric',
            unique_together={('forecast', 'metric_type')},
        ),
    ]
