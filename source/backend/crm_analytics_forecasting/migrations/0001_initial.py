# Generated by Django 4.2.23 on 2025-07-22 09:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Forecast',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom de la prévision', max_length=100)),
                ('forecast_type', models.CharField(choices=[('revenue', 'Revenus'), ('sales_volume', 'Volume de Ventes'), ('pipeline', 'Pipeline'), ('churn', 'Churn'), ('growth', 'Croissance'), ('seasonality', 'Saisonnalité'), ('demand', 'Demande'), ('custom', 'Personnalisé')], help_text='Type de prévision', max_length=20)),
                ('forecast_method', models.CharField(choices=[('linear_regression', 'Régression Linéaire'), ('polynomial', 'Polynomiale'), ('exponential', 'Exponentielle'), ('arima', 'ARIMA'), ('prophet', 'Prophet'), ('machine_learning', 'Machine Learning'), ('weighted_average', 'Moyenne Pondérée'), ('seasonal_decomposition', 'Décomposition Saisonnière')], help_text='Méthode de prévision', max_length=25)),
                ('target_metric', models.CharField(help_text='Métrique cible', max_length=100)),
                ('horizon_days', models.IntegerField(help_text='Horizon de prévision (jours)')),
                ('confidence_interval', models.DecimalField(decimal_places=2, default=95.0, help_text='Intervalle de confiance (%)', max_digits=4)),
                ('training_period_days', models.IntegerField(help_text="Période d'entraînement (jours)")),
                ('historical_data', models.JSONField(blank=True, default=list, help_text='Données historiques')),
                ('model_parameters', models.JSONField(default=dict, help_text='Paramètres du modèle')),
                ('seasonal_patterns', models.JSONField(blank=True, default=dict, help_text='Motifs saisonniers')),
                ('predicted_values', models.JSONField(blank=True, default=list, help_text='Valeurs prédites')),
                ('confidence_bounds', models.JSONField(blank=True, default=dict, help_text='Bornes de confiance')),
                ('accuracy_score', models.DecimalField(blank=True, decimal_places=2, help_text='Score de précision (%)', max_digits=5, null=True)),
                ('mean_absolute_error', models.DecimalField(blank=True, decimal_places=2, help_text='Erreur absolue moyenne', max_digits=15, null=True)),
                ('r_squared', models.DecimalField(blank=True, decimal_places=3, help_text='Coefficient de détermination R²', max_digits=4, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Prévision active')),
                ('last_trained_at', models.DateTimeField(blank=True, help_text='Dernier entraînement', null=True)),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prévision Analytics',
                'verbose_name_plural': 'Prévisions Analytics',
                'db_table': 'crm_analytics_forecast',
                'ordering': ['-last_trained_at'],
            },
        ),
        migrations.CreateModel(
            name='Trend',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom de la tendance', max_length=100)),
                ('direction', models.CharField(choices=[('up', 'Hausse'), ('down', 'Baisse'), ('stable', 'Stable'), ('volatile', 'Volatile'), ('seasonal', 'Saisonnier')], help_text='Direction de la tendance', max_length=15)),
                ('strength', models.CharField(choices=[('weak', 'Faible'), ('moderate', 'Modérée'), ('strong', 'Forte'), ('very_strong', 'Très Forte')], help_text='Force de la tendance', max_length=15)),
                ('metric_name', models.CharField(help_text='Nom de la métrique', max_length=100)),
                ('slope', models.DecimalField(decimal_places=4, help_text='Pente de la tendance', max_digits=10)),
                ('correlation_coefficient', models.DecimalField(decimal_places=3, help_text='Coefficient de corrélation', max_digits=4, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('detection_date', models.DateField(help_text='Date de détection')),
                ('trend_start_date', models.DateField(help_text='Début de la tendance')),
                ('trend_end_date', models.DateField(blank=True, help_text='Fin de la tendance (si applicable)', null=True)),
                ('context_factors', models.JSONField(blank=True, default=list, help_text='Facteurs contextuels')),
                ('statistical_significance', models.DecimalField(blank=True, decimal_places=3, help_text='Significativité statistique', max_digits=5, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Tendance active')),
                ('is_anomaly', models.BooleanField(default=False, help_text='Tendance anormale')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tendance Analytics',
                'verbose_name_plural': 'Tendances Analytics',
                'db_table': 'crm_analytics_trend',
                'ordering': ['-detection_date'],
                'indexes': [models.Index(fields=['metric_name', 'direction'], name='crm_analyti_metric__de3d70_idx'), models.Index(fields=['detection_date'], name='crm_analyti_detecti_39a068_idx'), models.Index(fields=['is_active', 'is_anomaly'], name='crm_analyti_is_acti_efcf82_idx')],
            },
        ),
        migrations.CreateModel(
            name='ForecastScenario',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('date_from', models.DateField(help_text='Date de début de la période')),
                ('date_to', models.DateField(help_text='Date de fin de la période')),
                ('granularity', models.CharField(choices=[('hourly', 'Horaire'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], default='daily', help_text='Granularité des données', max_length=15)),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='Dernière mise à jour des calculs', null=True)),
                ('calculation_duration_ms', models.IntegerField(blank=True, help_text='Durée du calcul (millisecondes)', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom du scénario', max_length=100)),
                ('scenario_type', models.CharField(choices=[('optimistic', 'Optimiste'), ('realistic', 'Réaliste'), ('pessimistic', 'Pessimiste'), ('best_case', 'Meilleur Cas'), ('worst_case', 'Pire Cas'), ('custom', 'Personnalisé')], help_text='Type de scénario', max_length=15)),
                ('assumptions', models.JSONField(default=dict, help_text='Hypothèses du scénario')),
                ('adjustments', models.JSONField(blank=True, default=dict, help_text='Ajustements appliqués')),
                ('probability', models.DecimalField(blank=True, decimal_places=2, help_text='Probabilité de réalisation (%)', max_digits=5, null=True)),
                ('predicted_values', models.JSONField(default=list, help_text='Valeurs prédites pour ce scénario')),
                ('impact_analysis', models.JSONField(blank=True, default=dict, help_text="Analyse d'impact")),
                ('description', models.TextField(blank=True, help_text='Description du scénario')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('forecast', models.ForeignKey(help_text='Prévision parent', on_delete=django.db.models.deletion.CASCADE, related_name='scenarios', to='crm_analytics_forecasting.forecast')),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Scénario Prévision',
                'verbose_name_plural': 'Scénarios Prévision',
                'db_table': 'crm_forecast_scenario',
                'ordering': ['scenario_type', 'name'],
                'unique_together': {('forecast', 'name')},
            },
        ),
        migrations.AddIndex(
            model_name='forecast',
            index=models.Index(fields=['forecast_type', 'forecast_method'], name='crm_analyti_forecas_22bbfb_idx'),
        ),
        migrations.AddIndex(
            model_name='forecast',
            index=models.Index(fields=['target_metric'], name='crm_analyti_target__76d6da_idx'),
        ),
        migrations.AddIndex(
            model_name='forecast',
            index=models.Index(fields=['is_active', 'last_trained_at'], name='crm_analyti_is_acti_37542a_idx'),
        ),
    ]
