# Generated by Django 4.2.23 on 2025-07-21 17:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company_core', '0003_company_trial_expires_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EcommerceCompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('additional_info', models.JSONField(blank=True, default=dict, help_text='Informations additionnelles spécifiques au secteur')),
                ('industry_score', models.IntegerField(blank=True, help_text="Score d'adéquation avec le secteur (0-100)", null=True)),
                ('is_validated', models.BooleanField(default=False, help_text='Profil validé par un expert secteur')),
                ('validated_at', models.DateTimeField(blank=True, help_text='Date de validation', null=True)),
                ('business_model', models.CharField(choices=[('b2c', 'B2C - Business to Consumer'), ('b2b', 'B2B - Business to Business'), ('c2c', 'C2C - Consumer to Consumer'), ('marketplace', 'Marketplace'), ('dropshipping', 'Dropshipping'), ('subscription', 'Commerce par Abonnement'), ('rental', 'Location/Rental'), ('digital_products', 'Produits Digitaux')], help_text='Modèle business e-commerce', max_length=20)),
                ('primary_category', models.CharField(choices=[('fashion', 'Mode & Accessoires'), ('electronics', 'Électronique & High-Tech'), ('home_garden', 'Maison & Jardin'), ('health_beauty', 'Santé & Beauté'), ('sports', 'Sport & Loisirs'), ('food_beverage', 'Alimentaire & Boissons'), ('books_media', 'Livres & Médias'), ('automotive', 'Automobile'), ('baby_kids', 'Bébé & Enfants'), ('services', 'Services'), ('multi_category', 'Multi-catégories')], help_text='Catégorie produits principale', max_length=20)),
                ('ecommerce_platform', models.CharField(blank=True, help_text='Plateforme e-commerce (Shopify, Magento, WooCommerce)', max_length=50)),
                ('has_mobile_app', models.BooleanField(default=False, help_text="Dispose d'une application mobile")),
                ('has_physical_stores', models.BooleanField(default=False, help_text='Possède des magasins physiques')),
                ('monthly_visitors', models.IntegerField(blank=True, help_text='Visiteurs mensuels sur le site', null=True)),
                ('conversion_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Taux de conversion (%)', max_digits=5, null=True)),
                ('average_order_value', models.DecimalField(blank=True, decimal_places=2, help_text='Panier moyen (€)', max_digits=10, null=True)),
                ('monthly_revenue', models.DecimalField(blank=True, decimal_places=2, help_text='CA mensuel estimé (€)', max_digits=12, null=True)),
                ('products_count', models.IntegerField(blank=True, help_text='Nombre de produits au catalogue', null=True)),
                ('has_own_brand', models.BooleanField(default=False, help_text='Vend sa propre marque')),
                ('is_reseller', models.BooleanField(default=False, help_text='Revend des marques tierces')),
                ('fulfillment_model', models.CharField(blank=True, help_text='Modèle de fulfillment (own, 3PL, dropship)', max_length=50)),
                ('shipping_zones', models.TextField(blank=True, help_text='Zones de livraison')),
                ('same_day_delivery', models.BooleanField(default=False, help_text='Livraison le jour même disponible')),
                ('primary_traffic_source', models.CharField(blank=True, help_text='Source de trafic principale (SEO, Ads, Social)', max_length=50)),
                ('uses_influencer_marketing', models.BooleanField(default=False, help_text="Utilise le marketing d'influence")),
                ('loyalty_program', models.BooleanField(default=False, help_text='Programme de fidélité en place')),
                ('payment_methods', models.TextField(blank=True, help_text='Méthodes de paiement acceptées')),
                ('supports_bnpl', models.BooleanField(default=False, help_text='Supporte le paiement en plusieurs fois')),
                ('company', models.OneToOneField(help_text='Entreprise associée à ce profil', on_delete=django.db.models.deletion.CASCADE, to='company_core.company')),
                ('validated_by', models.ForeignKey(blank=True, help_text='Expert qui a validé le profil', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil E-commerce',
                'verbose_name_plural': 'Profils E-commerce',
                'db_table': 'ecommerce_company_profile',
                'indexes': [models.Index(fields=['business_model'], name='ecommerce_c_busines_70326d_idx'), models.Index(fields=['primary_category'], name='ecommerce_c_primary_0b0fb2_idx'), models.Index(fields=['has_physical_stores'], name='ecommerce_c_has_phy_320b33_idx')],
            },
        ),
    ]
