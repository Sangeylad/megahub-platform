# Generated by Django 4.2.23 on 2025-07-22 11:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brands_core', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('crm_activities_core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NoteActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('content', models.TextField(help_text='Contenu de la note')),
                ('content_html', models.TextField(blank=True, help_text='Contenu HTML')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags')),
                ('keywords', models.JSONField(blank=True, default=list, help_text='Mots-clés')),
                ('visibility', models.CharField(choices=[('private', 'Privé'), ('team', 'Équipe'), ('company', 'Entreprise'), ('public', 'Public')], default='private', help_text='Visibilité', max_length=15)),
                ('has_attachments', models.BooleanField(default=False, help_text='PJ')),
                ('version', models.IntegerField(default=1, help_text='Version')),
                ('views_count', models.IntegerField(default=0, help_text='Vues')),
                ('likes_count', models.IntegerField(default=0, help_text='Likes')),
                ('is_pinned', models.BooleanField(default=False, help_text='Épinglé')),
                ('is_archived', models.BooleanField(default=False, help_text='Archivé')),
                ('archived_date', models.DateTimeField(blank=True, help_text='Date archivage', null=True)),
                ('activity', models.OneToOneField(help_text='Activité de base', on_delete=django.db.models.deletion.CASCADE, related_name='note_details', to='crm_activities_core.activity')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('last_modified_by', models.ForeignKey(blank=True, help_text='Modifié par', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_notes', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Détails Note',
                'verbose_name_plural': 'Détails Notes',
                'db_table': 'crm_note_activity',
            },
        ),
        migrations.CreateModel(
            name='NoteShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(choices=[('read', 'Lecture'), ('comment', 'Commentaire'), ('edit', 'Modification')], default='read', help_text='Permission', max_length=10)),
                ('shared_date', models.DateTimeField(auto_now_add=True, help_text='Date partage')),
                ('is_active', models.BooleanField(default=True, help_text='Actif')),
                ('note', models.ForeignKey(help_text='Note partagée', on_delete=django.db.models.deletion.CASCADE, to='crm_activities_notes.noteactivity')),
                ('shared_by', models.ForeignKey(help_text='Partagé par', on_delete=django.db.models.deletion.CASCADE, related_name='shared_notes_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='Utilisateur', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Partage Note',
                'verbose_name_plural': 'Partages Notes',
                'db_table': 'crm_note_share',
                'unique_together': {('note', 'user')},
            },
        ),
        migrations.AddField(
            model_name='noteactivity',
            name='shared_with',
            field=models.ManyToManyField(blank=True, help_text='Partagé avec', related_name='shared_notes', through='crm_activities_notes.NoteShare', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CommentActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Entité active dans le CRM')),
                ('comment_category', models.CharField(choices=[('general', 'Général'), ('feedback', 'Retour'), ('question', 'Question'), ('suggestion', 'Suggestion'), ('update', 'Mise à jour'), ('approval', 'Approbation'), ('rejection', 'Rejet')], default='general', help_text='Catégorie', max_length=15)),
                ('thread_level', models.IntegerField(default=0, help_text='Niveau thread')),
                ('content', models.TextField(help_text='Contenu commentaire')),
                ('reactions', models.JSONField(blank=True, default=dict, help_text='Réactions (emoji: count)')),
                ('is_flagged', models.BooleanField(default=False, help_text='Signalé')),
                ('flagged_reason', models.CharField(blank=True, help_text='Raison', max_length=100)),
                ('is_approved', models.BooleanField(default=True, help_text='Approuvé')),
                ('is_edited', models.BooleanField(default=False, help_text='Modifié')),
                ('edit_count', models.IntegerField(default=0, help_text='Nb modifications')),
                ('last_edited_at', models.DateTimeField(blank=True, help_text='Dernière modif', null=True)),
                ('activity', models.OneToOneField(help_text='Activité de base', on_delete=django.db.models.deletion.CASCADE, related_name='comment_details', to='crm_activities_core.activity')),
                ('brand', models.ForeignKey(help_text='Brand gestionnaire de cette entité', on_delete=django.db.models.deletion.CASCADE, to='brands_core.brand')),
                ('mentioned_users', models.ManyToManyField(blank=True, help_text='Utilisateurs mentionnés', related_name='mentioned_in_comments', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(help_text='Propriétaire/responsable de cette entité', on_delete=django.db.models.deletion.CASCADE, related_name='owned_%(class)s_entities', to=settings.AUTH_USER_MODEL)),
                ('parent_comment', models.ForeignKey(blank=True, help_text='Commentaire parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='crm_activities_notes.commentactivity')),
            ],
            options={
                'verbose_name': 'Détails Commentaire',
                'verbose_name_plural': 'Détails Commentaires',
                'db_table': 'crm_comment_activity',
            },
        ),
        migrations.AddIndex(
            model_name='noteactivity',
            index=models.Index(fields=['visibility'], name='crm_note_ac_visibil_fe0862_idx'),
        ),
        migrations.AddIndex(
            model_name='noteactivity',
            index=models.Index(fields=['is_pinned', 'is_archived'], name='crm_note_ac_is_pinn_3c5340_idx'),
        ),
        migrations.AddIndex(
            model_name='commentactivity',
            index=models.Index(fields=['parent_comment', 'thread_level'], name='crm_comment_parent__96bf4a_idx'),
        ),
        migrations.AddIndex(
            model_name='commentactivity',
            index=models.Index(fields=['comment_category'], name='crm_comment_comment_5aafb7_idx'),
        ),
        migrations.AddIndex(
            model_name='commentactivity',
            index=models.Index(fields=['is_flagged', 'is_approved'], name='crm_comment_is_flag_17758c_idx'),
        ),
    ]
